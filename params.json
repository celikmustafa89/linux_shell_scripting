{
  "name": "Shell Scripting",
  "tagline": "Mustafa ÇELİK",
  "body": "<h1 id=\"shell-scripting\"><strong>SHELL SCRIPTING</strong></h1>\r\n\r\n<hr>\r\n\r\n<h2 id=\"table-of-contents\"><strong>Table of Contents</strong></h2>\r\n\r\n<p><div class=\"toc\">\r\n<ul>\r\n<li><a href=\"#shell-scripting\">SHELL SCRIPTING</a><ul>\r\n<li><a href=\"#table-of-contents\">Table of Contents</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-1-introduction\">Shell Scripting Tutorial-1: Introduction</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-2-shell-kernel-terminal-and-more\">Shell Scripting Tutorial-2: Shell, Kernel, Terminal and More</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-3-view-system-date-calender\">Shell Scripting Tutorial-3: View System Date, Calender</a><ul>\r\n<li><a href=\"#calender\">Calender</a></li>\r\n<li><a href=\"#date\">Date</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-4-create-files-directories\">Shell Scripting Tutorial-4: Create Files &amp; Directories</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-5-text-files-create-merge-play\">Shell Scripting Tutorial-5: Text Files: Create, Merge &amp; Play</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-6-rename-delete-files-directories\">Shell Scripting Tutorial-6: Rename &amp; Delete Files &amp; Directories</a><ul>\r\n<li><a href=\"#rename-files-directories\">Rename Files &amp; Directories</a></li>\r\n<li><a href=\"#delete-files-directories\">Delete Files &amp; Directories</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-7-create-copies-links-to-files-directories\">Shell Scripting Tutorial-7: Create Copies, Links to Files &amp; Directories</a><ul>\r\n<li><a href=\"#copy-files\">Copy Files</a></li>\r\n<li><a href=\"#links\">Links</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-8-file-permissions\">Shell Scripting Tutorial-8: File Permissions</a><ul>\r\n<li><a href=\"#file-permission\">File Permission</a></li>\r\n<li><a href=\"#umask-usage\">“umask” Usage</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-9-see-whats-using-in-ls\">Shell Scripting Tutorial-9: See What’s Using in ‘ls’</a><ul>\r\n<li><a href=\"#usage-of-ls\">Usage of ‘ls’</a></li>\r\n<li><a href=\"#hidden-files-and-ls-a\">Hidden files and ‘ls -a’</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-10-change-file-permissions-using-chmod\">Shell Scripting Tutorial-10: Change File Permissions Using ‘chmod’</a><ul>\r\n<li><a href=\"#usage-of-chmod\">Usage of ‘chmod’</a></li>\r\n<li><a href=\"#usage-of-uname\">Usage of ‘uname’</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-11-count-lines-words-characters-using-wc\">Shell Scripting Tutorial-11: Count Lines, Words &amp; Characters Using ‘wc’</a><ul>\r\n<li><a href=\"#usage-of-file\">Usage of ‘file’</a></li>\r\n<li><a href=\"#usage-of-wc\">Usage of ‘wc’</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-12-sort\">Shell Scripting Tutorial-12: Sort</a><ul>\r\n<li><a href=\"#usage-of-sort\">Usage of ‘sort’</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-13-cut-through-your-files\">Shell Scripting Tutorial-13: Cut Through Your Files</a><ul>\r\n<li><a href=\"#usage-of-cut\">Usage of ‘cut’</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-14-convert-copy-files-with-dd\">Shell Scripting Tutorial-14: Convert &amp; Copy Files with ‘dd’</a><ul>\r\n<li><a href=\"#usage-of-dd\">Usage of ‘dd’</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-15-get-help-view-fancy-text-reduce-file-size\">Shell Scripting Tutorial-15: Get Help, View Fancy Text &amp; Reduce File Size</a><ul>\r\n<li><a href=\"#getting-help\">Getting Help</a></li>\r\n<li><a href=\"#view-fancy-text\">View Fancy Text</a></li>\r\n<li><a href=\"#reduce-file-size\">Reduce File Size</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-16-hello-world\">Shell Scripting Tutorial-16: Hello World!</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-17-use-command-in-your-script\">Shell Scripting Tutorial-17: Use Command in Your Script</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-18-shell-variables-grab-user-input-using-read\">Shell Scripting Tutorial-18: Shell Variables, Grab User Input Using ‘read’</a><ul>\r\n<li><a href=\"#shell-variables\">Shell Variables</a></li>\r\n<li><a href=\"#grab-user-input-using-read\">Grab User Input Using ‘read’</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#shell-scripting-tutorial-19-positional-parameters\">Shell Scripting Tutorial-19: Positional Parameters</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-20-more-on-positional-parameters\">Shell Scripting Tutorial-20: More on Positional Parameters</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-21-reverse-quotes-accent-graves\">Shell Scripting Tutorial-21: Reverse Quotes &amp; Accent Graves</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-22-count-the-number-of-command-line-arguments-using\">Shell Scripting Tutorial-22: Count the Number of Command Line Arguments Using ‘$#’</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-23-math-on-integers-using-expr\">Shell Scripting Tutorial-23: Math on Integers Using ‘expr’</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-24-operator-precedence\">Shell Scripting Tutorial-24: Operator Precedence</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-25-math-on-real-numbers\">Shell Scripting Tutorial-25: Math on Real Numbers</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-26-escape-sequences\">Shell Scripting Tutorial-26: Escape Sequences</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-27-do-cool-things-with-tput\">Shell Scripting Tutorial-27: Do Cool Things with ‘tput’</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-28-if-then-statement-in-action\">Shell Scripting Tutorial-28: ‘if-then’ Statement in Action</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-29-the-if-then-else-statement\">Shell Scripting Tutorial-29: The ‘if-then-else’ Statement</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-30-run-checks-on-numbers\">Shell Scripting Tutorial-30: Run Checks on Numbers</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-31-run-checks-on-files\">Shell Scripting Tutorial-31: Run Checks on Files</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-32-append-text-to-a-file-through-shell-script\">Shell Scripting Tutorial-32: Append Text to a File Through Shell Script</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-33-run-checks-on-strings\">Shell Scripting Tutorial-33: Run Checks on Strings</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-34-run-checks-on-stringthe-and-logical-operator\">Shell Scripting Tutorial-34: Run Checks on StringThe ‘AND’ Logical Operator</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-35-count-the-number-of-characters-in-users-input-in-your-script\">Shell Scripting Tutorial-35: Count the Number of Characters in User’s Input in Your Script</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-36-the-or-logical-operator\">Shell Scripting Tutorial-36: The ‘OR’ Logical Operator</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-38-another-date-with-case-statement\">Shell Scripting Tutorial-38: Another Date with ‘case’ Statement</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-39-the-while-loop\">Shell Scripting Tutorial-39: The ‘while’ Loop</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-40-the-until-loop\">Shell Scripting Tutorial-40: The ‘until’ Loop</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-41-the-for-loop\">Shell Scripting Tutorial-41: The ‘for’ Loop</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-42-rant-little-work\">Shell Scripting Tutorial-42: Rant &amp; Little Work</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-43-search-patterns-using-grep\">Shell Scripting Tutorial-43: Search Patterns Using ‘grep’</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-45-the-internal-field-separator\">Shell Scripting Tutorial-45: The Internal Field Separator</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-46-passwd-file-revisited\">Shell Scripting Tutorial-46: ‘passwd’ File Revisited</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-47-reading-from-a-file\">Shell Scripting Tutorial-47: Reading From a File</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-48-sleep-while-you-are-at-work\">Shell Scripting Tutorial-48: Sleep While You are at Work</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-49-count-the-number-of-words-sentences-in-a-text-file-without-using-wc\">Shell Scripting Tutorial-49: Count the number of words &amp; sentences in a text file without using ‘wc’</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-51-nested-loops\">Shell Scripting Tutorial-51: Nested Loops</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-52-the-break-statement\">Shell Scripting Tutorial-52: The ‘break’ Statement</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-53-the-continue-statement\">Shell Scripting Tutorial-53: The ‘continue’ Statement</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-54-more-on-metacharacters\">Shell Scripting Tutorial-54: More on Metacharacters</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-55-adding-removing-users\">Shell Scripting Tutorial-55: Adding &amp; Removing Users</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-56-know-when-users-log-in-part-one\">Shell Scripting Tutorial-56: Know when users log in Part One</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-57-know-when-users-log-in-part-two\">Shell Scripting Tutorial-57: Know when users log in Part Two</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-58-know-when-users-log-in-final-part\">Shell Scripting Tutorial-58: Know when users log in Final Part</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-59-communicate-with-other-users-using-write\">Shell Scripting Tutorial-59: Communicate with other users using ‘write’</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-60-create-your-own-commands-using-functions\">Shell Scripting Tutorial-60: Create Your Own Commands Using Functions</a></li>\r\n<li><a href=\"#shell-scripting-tutorial-61-executing-multiple-scripts\">Shell Scripting Tutorial-61: Executing Multiple Scripts</a></li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</div>\r\n</p>\r\n\r\n<h2 id=\"shell-scripting-tutorial-1-introduction\"><strong>Shell Scripting Tutorial-1:</strong> <em>Introduction</em></h2>\r\n\r\n<p>Install a linux distribution.</p>\r\n\r\n<h2 id=\"shell-scripting-tutorial-2-shell-kernel-terminal-and-more\"><strong>Shell Scripting Tutorial-2:</strong> <em>Shell, Kernel, Terminal and More</em></h2>\r\n\r\n<p><strong>Shell</strong> is an interface between user and the UNIX Kernel. <br>\r\n<strong>UNIX Kernel</strong> manages the resources and hardware. <br>\r\n<strong>Terminal</strong> provides access to shell.  </p>\r\n\r\n<p>\\@\\:~$ terminal commands must be lowercase.  </p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\nwho am i\r\nwhoami\r\n<span class=\"hljs-built_in\">pwd</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \">joker    pts/3        2016-08-31 16:40 (:0.0) joker /home/joker/PycharmProjects/bash_script</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>who am i</code></td>\r\n  <td>shows user name, terminal number, date</td>\r\n</tr>\r\n<tr>\r\n  <td><code>whoami</code></td>\r\n  <td>shows only user name</td>\r\n</tr>\r\n<tr>\r\n  <td><code>pwd</code></td>\r\n  <td>prints the working directory</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-3-view-system-date-calender\"><strong>Shell Scripting Tutorial-3:</strong> <em>View System Date, Calender</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"calender\">Calender</h3>\r\n\r\n<p>calender commands:  </p>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>cal</code></td>\r\n  <td>prints the calender</td>\r\n</tr>\r\n<tr>\r\n  <td><code>cal 7 2006</code></td>\r\n  <td>prints july 2006</td>\r\n</tr>\r\n<tr>\r\n  <td><code>cal feb 2033</code></td>\r\n  <td>prints february 2033</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n\r\n\r\n<h3 id=\"date\">Date</h3>\r\n\r\n<p><strong>date</strong> command prints date as <em><strong>Mon Aug  8 14:37:04 EEST 2016</strong></em>.  </p>\r\n\r\n<p>Output of date command can be customized. <br>\r\n$ date ‘+DATE: %m-%y%nTIME: %H:%M:%S’ <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\ncal <span class=\"hljs-comment\"># prints the calender</span>\r\ncal <span class=\"hljs-number\">7</span> <span class=\"hljs-number\">2006</span> <span class=\"hljs-comment\"># prints july 2006</span>\r\ncal feb <span class=\"hljs-number\">2033</span>\r\n\r\ndate <span class=\"hljs-comment\"># prints date, time and year</span>\r\ndate <span class=\"hljs-string\">'+DATE: %m-%y%nTIME: %H:%M:%S'</span> <span class=\"hljs-comment\"># customized date print</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs css\">    <span class=\"hljs-tag\">August</span> 2016       \r\n<span class=\"hljs-tag\">Su</span> <span class=\"hljs-tag\">Mo</span> <span class=\"hljs-tag\">Tu</span> <span class=\"hljs-tag\">We</span> <span class=\"hljs-tag\">Th</span> <span class=\"hljs-tag\">Fr</span> <span class=\"hljs-tag\">Sa</span>  \r\n    1  2  3  4  5  6  \r\n 7  8  9 10 11 12 13  \r\n14 15 16 17 18 19 20  \r\n21 22 23 24 25 26 27  \r\n28 29 30 31           \r\n\r\n     <span class=\"hljs-tag\">July</span> 2006        \r\n<span class=\"hljs-tag\">Su</span> <span class=\"hljs-tag\">Mo</span> <span class=\"hljs-tag\">Tu</span> <span class=\"hljs-tag\">We</span> <span class=\"hljs-tag\">Th</span> <span class=\"hljs-tag\">Fr</span> <span class=\"hljs-tag\">Sa</span>  \r\n                   1  \r\n 2  3  4  5  6  7  8  \r\n 9 10 11 12 13 14 15  \r\n16 17 18 19 20 21 22  \r\n23 24 25 26 27 28 29  \r\n30 31                 \r\n   <span class=\"hljs-tag\">February</span> 2033      \r\n<span class=\"hljs-tag\">Su</span> <span class=\"hljs-tag\">Mo</span> <span class=\"hljs-tag\">Tu</span> <span class=\"hljs-tag\">We</span> <span class=\"hljs-tag\">Th</span> <span class=\"hljs-tag\">Fr</span> <span class=\"hljs-tag\">Sa</span>  \r\n       1  2  3  4  5  \r\n 6  7  8  9 10 11 12  \r\n13 14 15 16 17 18 19  \r\n20 21 22 23 24 25 26  \r\n27 28                 \r\n\r\n<span class=\"hljs-tag\">Wed</span> <span class=\"hljs-tag\">Aug</span> 31 16<span class=\"hljs-pseudo\">:43</span><span class=\"hljs-pseudo\">:35</span> <span class=\"hljs-tag\">EEST</span> 2016\r\n<span class=\"hljs-tag\">DATE</span>: 08<span class=\"hljs-tag\">-16</span>\r\n<span class=\"hljs-tag\">TIME</span>: 16<span class=\"hljs-pseudo\">:43</span><span class=\"hljs-pseudo\">:35</span></code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>date</code></td>\r\n  <td>prints date as “Mon Aug  8 14:37:04 EEST 2016”</td>\r\n</tr>\r\n<tr>\r\n  <td><code>date '+DATE: %m-%y%nTIME: %H:%M:%S'</code></td>\r\n  <td>prints date as “DATE: 08-16 TIME: 14:40:33”</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-4-create-files-directories\"><strong>Shell Scripting Tutorial-4:</strong> <em>Create Files &amp; Directories</em></h2>\r\n\r\n<p><strong>touch</strong> is used to create empty files. <br>\r\n<strong>mkdir</strong> is used to create empty folder. <br>\r\n<strong>cd</strong> is used to navigate inside folders. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\ntouch empty_file1 empty_file2 empty_file3 <span class=\"hljs-comment\"># creates empty file</span>\r\n\r\nmkdir folder1 folder2 folder3 <span class=\"hljs-comment\"># creates folder</span>\r\nmkdir Documents/folder1 <span class=\"hljs-comment\"># creates folder in a specific path</span>\r\n\r\n<span class=\"hljs-built_in\">cd</span> Documents/folder1</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \"></code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>touch empty_file1 empty_file2</code></td>\r\n  <td>creates two empty files</td>\r\n</tr>\r\n<tr>\r\n  <td><code>mkdir folder1</code></td>\r\n  <td>creates a folder in working directory</td>\r\n</tr>\r\n<tr>\r\n  <td><code>mkdir Documents/folder1</code></td>\r\n  <td>creates a folder in Documents directory</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-5-text-files-create-merge-play\"><strong>Shell Scripting Tutorial-5:</strong> <em>Text Files: Create, Merge &amp; Play</em></h2>\r\n\r\n<p><strong>cat</strong> creates file with text. <br>\r\n<code>$ cat &gt; test_file</code> <br>\r\n<code>test_file content bla bla..</code>  </p>\r\n\r\n<p><strong>cat</strong> shows content of the file. <br>\r\n<code>$ cat test_file</code> <br>\r\n<code>$ cat &lt; test_file</code>  </p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\ncat &gt; test_file <span class=\"hljs-comment\"># creates file with text</span>\r\n<span class=\"hljs-comment\"># test_file content is entered here...</span>\r\n\r\ncat &lt; test_file <span class=\"hljs-comment\"># prints the content</span>\r\ncat test_file <span class=\"hljs-comment\"># prints the content</span>\r\n\r\ncat &gt; test_file2 <span class=\"hljs-comment\"># creates file with text</span>\r\n<span class=\"hljs-comment\"># test_file2 content is entered here..</span>\r\n\r\ncat test_file test_file2 &gt; merged_test_files <span class=\"hljs-comment\"># merge two files</span>\r\n\r\ncat &lt; merged_test_files <span class=\"hljs-comment\"># shows both test files' content</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">test_file_content <span class=\"hljs-number\">1</span> <span class=\"hljs-constant\">EOF</span>\r\ntest_file_content <span class=\"hljs-number\">1</span> <span class=\"hljs-constant\">EOF</span>\r\ntest_file_content <span class=\"hljs-number\">1</span> <span class=\"hljs-constant\">EOF</span>\r\ntest_file2_content <span class=\"hljs-number\">2</span> <span class=\"hljs-constant\">EOF</span>\r\ntest_file_content <span class=\"hljs-number\">1</span> <span class=\"hljs-constant\">EOF</span>\r\ntest_file2_content <span class=\"hljs-number\">2</span> <span class=\"hljs-constant\">EOF</span></code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>cat &gt; test_file</code></td>\r\n  <td>creates file with text</td>\r\n</tr>\r\n<tr>\r\n  <td><code>cat &lt; test_file</code></td>\r\n  <td>prints the content</td>\r\n</tr>\r\n<tr>\r\n  <td><code>cat test_file</code></td>\r\n  <td>prints the content</td>\r\n</tr>\r\n<tr>\r\n  <td><code>cat &gt; test_file2</code></td>\r\n  <td>creates file with text</td>\r\n</tr>\r\n<tr>\r\n  <td><code>cat test_file test_file2 &gt; merged_test_files</code></td>\r\n  <td>merge two files</td>\r\n</tr>\r\n<tr>\r\n  <td><code>cat &lt; merged_test_files</code></td>\r\n  <td>shows both test files’ content</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-6-rename-delete-files-directories\"><strong>Shell Scripting Tutorial-6:</strong> <em>Rename &amp; Delete Files &amp; Directories</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"rename-files-directories\">Rename Files &amp; Directories</h3>\r\n\r\n<p><strong>mv</strong> renames files and directories <br>\r\n<code>mv file1 file2</code>  </p>\r\n\r\n\r\n\r\n<h3 id=\"delete-files-directories\">Delete Files &amp; Directories</h3>\r\n\r\n<p><strong>rm</strong> deletes file <br>\r\n<code>rm file</code>  </p>\r\n\r\n<p><strong>rm -r</strong> deletes directory <br>\r\n<code>rm -r directory/</code>  </p>\r\n\r\n<p><strong>rmdir</strong> deletes empty directory <br>\r\n<code>rmdir empty_directory</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\ntouch farm_village\r\nmv farm_village red_cliff <span class=\"hljs-comment\"># renames the file</span>\r\nrm red_cliff <span class=\"hljs-comment\"># deletes the file</span>\r\n\r\nmkdir new\r\nrm -r new <span class=\"hljs-comment\"># deletes the directory</span>\r\n\r\nmkdir test\r\nrmdir test <span class=\"hljs-comment\"># deletes the directory</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \"></code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>mv file1 file2</code></td>\r\n  <td>renames the file</td>\r\n</tr>\r\n<tr>\r\n  <td><code>mv directory1 directory2</code></td>\r\n  <td>renames the directory</td>\r\n</tr>\r\n<tr>\r\n  <td><code>rm file2</code></td>\r\n  <td>deletes the file</td>\r\n</tr>\r\n<tr>\r\n  <td><code>rm -r directory2</code></td>\r\n  <td>deletes the directory</td>\r\n</tr>\r\n<tr>\r\n  <td><code>rmdir empty_directory</code></td>\r\n  <td>deletes the empty directory</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-7-create-copies-links-to-files-directories\"><strong>Shell Scripting Tutorial-7:</strong> <em>Create Copies, Links to Files &amp; Directories</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"copy-files\">Copy Files</h3>\r\n\r\n<p><strong>cp</strong> is used to copy files from one location to other. <br>\r\n<strong>cp</strong> copies the file <strong>mv</strong> cuts and pastes the file. <br>\r\n<code>cp file /home/Music/file_new_name</code>  </p>\r\n\r\n\r\n\r\n<h3 id=\"links\">Links</h3>\r\n\r\n<p><strong>ln</strong> creates hard link for a file. <br>\r\n<strong>Hard link</strong> is replica of original one. <br>\r\nAny changes from old file, also exists in new one. <br>\r\nRemoving the original one does not effect new one. <br>\r\n<code>ln old_file new_file</code>  </p>\r\n\r\n<p><strong>ln -s</strong> creates soft link. <br>\r\nAny changes from old file, also exists in new one. <br>\r\nRemoving the original makes soft link useless. <br>\r\n<code>ln -s old old_soft</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\ntouch old\r\ncp old /home/Music/new_file <span class=\"hljs-comment\"># copy files with new name</span>\r\n\r\nln old new <span class=\"hljs-comment\"># creates hard links</span>\r\n<span class=\"hljs-comment\"># any changes from old file, also exists in new one (HARD link)</span>\r\n\r\nln <span class=\"hljs-operator\">-s</span>  old old_soft <span class=\"hljs-comment\"># creates soft  link</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \"></code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>cp old_file /home/Music/new_file</code></td>\r\n  <td>copy files to new location with new name</td>\r\n</tr>\r\n<tr>\r\n  <td><code>ln file hard_file</code></td>\r\n  <td>creates a hard link</td>\r\n</tr>\r\n<tr>\r\n  <td><code>ln -s file soft_file</code></td>\r\n  <td>creates a soft link</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-8-file-permissions\"><strong>Shell Scripting Tutorial-8:</strong> <em>File Permissions</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"file-permission\">File Permission</h3>\r\n\r\n<p><strong>owner</strong>, <strong>group</strong> and <strong>other</strong> are 3 permission part.  </p>\r\n\r\n<p><strong>read</strong>, <strong>write</strong> and <strong>execute</strong> are 3 type of permission. <br>\r\n- <strong>read</strong>: has numeric value “<strong>4</strong>“. <br>\r\n- <strong>write</strong>: has numeric value “<strong>2</strong>“. <br>\r\n- <strong>execute</strong>: has numeric value “<strong>1</strong>“.  </p>\r\n\r\n\r\n\r\n<h3 id=\"umask-usage\">“umask” Usage</h3>\r\n\r\n<p><strong>umask</strong> is used to specify permission values. <br>\r\nAssume <strong>umask</strong> value is <strong><em>0022</em></strong>. <br>\r\n<code>file permission = 666 - 022 = 644</code> which means owner(read, write=6), group(read=4), other(read=4) <br>\r\n<code>directory permission = 777 - 022 = 755</code> which means owner(read, write, execute=7), group/other(read, execute=5) <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\numask <span class=\"hljs-comment\"># shows the number that is used to create defaul file permission.</span>\r\n<span class=\"hljs-comment\"># output: 0022</span>\r\n<span class=\"hljs-comment\"># which means:</span>\r\n<span class=\"hljs-comment\"># - file permissions will be     = 666-022 = 644 (owner-&gt;read,write group/other-&gt;read)</span>\r\n<span class=\"hljs-comment\"># - directory permission will be = 777-022 = 755 (owner-&gt;r,w,e group/other-&gt;r,e)</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \">0022</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>umask</code></td>\r\n  <td>shows file and directory permission creation base number</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-9-see-whats-using-in-ls\"><strong>Shell Scripting Tutorial-9:</strong> <em>See What’s Using in ‘ls’</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"usage-of-ls\">Usage of ‘ls’</h3>\r\n\r\n<p><strong>ls</strong> shows the list of files and directories. <br>\r\n<code>ls -l</code> shows the following <br>\r\n<code>total 4</code> <br>\r\n<code>-rw-r--r-- 2 joker joker    0 Aug  9 13:58 forrest_village</code> <br>\r\n<code>-rw-r--r-- 2 joker joker    0 Aug  9 13:58 new</code> <br>\r\n<code>-rw-r--r-- 1 joker joker    0 Aug  9 15:10 sample</code> <br>\r\n<code>drwxr-xr-x 2 joker joker 4096 Aug  9 14:05 sdf</code>    </p>\r\n\r\n<p><strong>“d”</strong> letter at the beginnig of the last line shows that it is a <strong>directory</strong>. <br>\r\nAny <strong>“l”</strong> letter at the beginning of the line shows that it is a <strong>soft link</strong>.  </p>\r\n\r\n<p>Next characters shows the permissions owner(read,write,execute)group(read,write,execute)other(read,write,execute)  </p>\r\n\r\n\r\n\r\n<h3 id=\"hidden-files-and-ls-a\">Hidden files and ‘ls -a’</h3>\r\n\r\n<p>Hidden files are created using . at the beginning of the file name. <br>\r\n<code>touch .test</code>  </p>\r\n\r\n<p><code>ls -a</code> shows all files in the directory, inclued hidden files. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\ncat &gt; test\r\n<span class=\"hljs-comment\"># random text in test file...</span>\r\n\r\nls <span class=\"hljs-comment\"># lists the files and directories</span>\r\n\r\nls <span class=\"hljs-operator\">-l</span> <span class=\"hljs-comment\"># lists the file permissions.</span>\r\n\r\ntouch .test <span class=\"hljs-comment\"># creates a hidden files</span>\r\nls <span class=\"hljs-operator\">-a</span> <span class=\"hljs-comment\"># lists all files and directories including hidden ones.</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">list <span class=\"hljs-operator\">of</span> all <span class=\"hljs-built_in\">files</span> will be printed.</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>ls</code></td>\r\n  <td>lists files and directories</td>\r\n</tr>\r\n<tr>\r\n  <td><code>ls -l</code></td>\r\n  <td>lists files and directories with permissions</td>\r\n</tr>\r\n<tr>\r\n  <td><code>touch .test</code></td>\r\n  <td>creates a hidden file</td>\r\n</tr>\r\n<tr>\r\n  <td><code>ls -a</code></td>\r\n  <td>list all files and directories including hidden ones</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-10-change-file-permissions-using-chmod\"><strong>Shell Scripting Tutorial-10:</strong> <em>Change File Permissions Using ‘chmod’</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"usage-of-chmod\">Usage of ‘chmod’</h3>\r\n\r\n<p><code>**chmod**</code> changes file permissions. <br>\r\n<code>chmod 777 test</code> gives read, write and execute permissions to owner,group and other  </p>\r\n\r\n\r\n\r\n<h3 id=\"usage-of-uname\">Usage of ‘uname’</h3>\r\n\r\n<p><code>**uname**</code> shows all about machine. <br>\r\n<code>$ uname -a</code>  <br>\r\noutput: <br>\r\n<code>**Linux joker 3.16.0-38-generic #52~14.04.1-Ubuntu SMP Fri May 8 09:43:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux**</code>  </p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\ntouch test\r\nls <span class=\"hljs-operator\">-l</span>\r\n\r\nchmod <span class=\"hljs-number\">777</span> test <span class=\"hljs-comment\"># gives all permissions to owner, group and others.</span>\r\nls <span class=\"hljs-operator\">-l</span>\r\n\r\nuname <span class=\"hljs-operator\">-a</span> <span class=\"hljs-comment\"># shows all about machine</span>\r\n<span class=\"hljs-comment\"># output:</span>\r\n<span class=\"hljs-comment\"># Linux joker 3.16.0-38-generic #52~14.04.1-Ubuntu SMP Fri May 8 09:43:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-comment\">####file list will be printed here.</span>\r\nLinux joker <span class=\"hljs-number\">3.16</span>.<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">38</span>-generic <span class=\"hljs-comment\">#52~14.04.1-Ubuntu SMP Fri May 8 09:43:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span>\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>chmod 777 test</code></td>\r\n  <td>gives all permissions to all users</td>\r\n</tr>\r\n<tr>\r\n  <td><code>uname -a</code></td>\r\n  <td>shows all details about machine and kernel</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-11-count-lines-words-characters-using-wc\"><strong>Shell Scripting Tutorial-11:</strong> <em>Count Lines, Words &amp; Characters Using ‘wc’</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"usage-of-file\">Usage of ‘file’</h3>\r\n\r\n<p><strong><code>file</code></strong> shows the type of files. <br>\r\n<code>file *</code> <br>\r\noutput: <br>\r\n<code>aaa:             symbolic link to 'new'</code> <br>\r\n<code>bbb:             empty</code> <br>\r\n<code>forrest_village: empty</code> <br>\r\n<code>jazz:            ASCII text</code> <br>\r\n<code>new:             empty</code> <br>\r\n<code>sdf:             directory</code>  </p>\r\n\r\n\r\n\r\n<h3 id=\"usage-of-wc\">Usage of ‘wc’</h3>\r\n\r\n<p><code>wc file</code> <br>\r\noutput: <br>\r\n<code>4  7 48 file</code> <br>\r\n4 : number of lines <br>\r\n7 : number of words <br>\r\n48: number of characters  </p>\r\n\r\n<p><code>wc -l file</code> show line count <br>\r\n<code>wc -w file</code> show word count <br>\r\n<code>wc -c file</code> show character count <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs vhdl\">#!/usr/bin/env bash\r\n\r\n<span class=\"hljs-keyword\">file</span> * # shows the <span class=\"hljs-keyword\">type</span> <span class=\"hljs-keyword\">of</span> files\r\n<span class=\"hljs-keyword\">file</span> test # shows the <span class=\"hljs-keyword\">type</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-keyword\">file</span> test\r\n\r\nwc test # shows the number <span class=\"hljs-keyword\">of</span> lines,words <span class=\"hljs-keyword\">and</span> chracters <span class=\"hljs-keyword\">of</span> <span class=\"hljs-keyword\">file</span> test\r\nwc -l test # shows the number <span class=\"hljs-keyword\">of</span> lines <span class=\"hljs-keyword\">of</span> <span class=\"hljs-keyword\">file</span> test\r\nwc -w test # shows the number <span class=\"hljs-keyword\">of</span> words <span class=\"hljs-keyword\">of</span> <span class=\"hljs-keyword\">file</span> test\r\nwc -c test # shows the number <span class=\"hljs-keyword\">of</span> characters <span class=\"hljs-keyword\">of</span> <span class=\"hljs-keyword\">file</span> test</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">commandlist_tutorial_50:     ASCII <span class=\"hljs-keyword\">text</span>\r\ncreate_consecutive_files.sh: Bourne-Again <span class=\"hljs-built_in\">shell</span> script, ASCII <span class=\"hljs-keyword\">text</span> executable\r\nempty_file1:                 <span class=\"hljs-constant\">empty</span> \r\nempty_file2:                 <span class=\"hljs-constant\">empty</span> \r\nempty_file3:                 <span class=\"hljs-constant\">empty</span> \r\nfolder1:                     <span class=\"hljs-built_in\">directory</span> \r\ntest: ASCII <span class=\"hljs-keyword\">text</span>\r\n <span class=\"hljs-number\">1</span>  <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">10</span> test\r\n<span class=\"hljs-number\">1</span> test\r\n<span class=\"hljs-number\">2</span> test\r\n<span class=\"hljs-number\">10</span> test\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>file *</code></td>\r\n  <td>shows file types of all files</td>\r\n</tr>\r\n<tr>\r\n  <td><code>wc file</code></td>\r\n  <td>shows number of lines, words and chracters of file</td>\r\n</tr>\r\n<tr>\r\n  <td><code>wc -l file</code></td>\r\n  <td>shows number of lines</td>\r\n</tr>\r\n<tr>\r\n  <td><code>wc -w file</code></td>\r\n  <td>shows number of words</td>\r\n</tr>\r\n<tr>\r\n  <td><code>wc -c file</code></td>\r\n  <td>shows number of chracters</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-12-sort\"><strong>Shell Scripting Tutorial-12:</strong> <em>Sort</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"usage-of-sort\">Usage of ‘sort’</h3>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs vala\"><span class=\"hljs-preprocessor\">#!/usr/bin/env bash</span>\r\n\r\ncat &gt; animals\r\n<span class=\"hljs-preprocessor\"># dogs</span>\r\n<span class=\"hljs-preprocessor\"># cats</span>\r\n<span class=\"hljs-preprocessor\"># birds</span>\r\n<span class=\"hljs-preprocessor\"># monkeys</span>\r\n<span class=\"hljs-preprocessor\"># elephants</span>\r\n\r\nsort animals # sort lines alphabetically\r\n\r\ncat &gt; sports\r\n<span class=\"hljs-preprocessor\"># cricet</span>\r\n<span class=\"hljs-preprocessor\"># tennis</span>\r\n<span class=\"hljs-preprocessor\"># football</span>\r\n<span class=\"hljs-preprocessor\"># basketball</span>\r\n<span class=\"hljs-preprocessor\"># wrestling</span>\r\n\r\nsort sports # sort lines alphabetically\r\n\r\nsort\r\n<span class=\"hljs-preprocessor\"># Apocalypse</span>\r\n<span class=\"hljs-preprocessor\"># Avatar</span>\r\n<span class=\"hljs-preprocessor\"># Forrest Gump</span>\r\n<span class=\"hljs-preprocessor\"># Saving Private Ryan</span>\r\n\r\n<span class=\"hljs-preprocessor\"># hit \"ctrl+d\" sorts the lines</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs php\">dogs\r\ncats\r\nbirds\r\nmonkeys\r\nelephants\r\nbirds\r\ncats\r\ndogs\r\nelephants\r\nmonkeys\r\ncricet\r\ntennis\r\nfootball\r\nbasketball\r\nwrestling\r\nbasketball\r\ncricet\r\nfootball\r\ntennis\r\nwrestling\r\nApocalypse\r\nAvatar\r\nForrest Gump\r\nSaving <span class=\"hljs-keyword\">Private</span> Ryan\r\nApocalypse\r\nAvatar\r\nForrest Gump\r\nSaving <span class=\"hljs-keyword\">Private</span> Ryan\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>sort animals</code></td>\r\n  <td>sorts alphabetically the lines of file</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-13-cut-through-your-files\"><strong>Shell Scripting Tutorial-13:</strong> <em>Cut Through Your Files</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"usage-of-cut\">Usage of ‘cut’</h3>\r\n\r\n<p><strong><code>cut</code></strong> uses - as default saperater. <br>\r\n<code>cut -d\"-\" -f 1,3 file_name</code>  </p>\r\n\r\n<p><strong><em>-d</em></strong>: specify the delimeter character <br>\r\n<strong><em>-f</em></strong>: specify the fields that will be printed <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\ncat &gt; players\r\n<span class=\"hljs-comment\"># Name-Sport-Age</span>\r\n<span class=\"hljs-comment\"># Roger-Tennis-30</span>\r\n<span class=\"hljs-comment\"># Rafel-Tennis-25</span>\r\n<span class=\"hljs-comment\"># Tiger-Golf-27</span>\r\n<span class=\"hljs-comment\"># Michael-Swimmer-27</span>\r\n<span class=\"hljs-comment\"># Kobe-Basketball-34</span>\r\n\r\ncut <span class=\"hljs-operator\">-d</span><span class=\"hljs-string\">\"-\"</span> <span class=\"hljs-operator\">-f</span> <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span> players <span class=\"hljs-comment\"># prints 1 and 3 column of players file using - delimeter</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs lasso\">Name<span class=\"hljs-attribute\">-Sport</span><span class=\"hljs-attribute\">-Age</span>\r\nRoger<span class=\"hljs-attribute\">-Tennis</span><span class=\"hljs-subst\">-</span><span class=\"hljs-number\">30</span>\r\nRafel<span class=\"hljs-attribute\">-Tennis</span><span class=\"hljs-subst\">-</span><span class=\"hljs-number\">25</span>\r\nTiger<span class=\"hljs-attribute\">-Golf</span><span class=\"hljs-subst\">-</span><span class=\"hljs-number\">27</span>\r\nMichael<span class=\"hljs-attribute\">-Swimmer</span><span class=\"hljs-subst\">-</span><span class=\"hljs-number\">27</span>\r\nKobe<span class=\"hljs-attribute\">-Basketball</span><span class=\"hljs-subst\">-</span><span class=\"hljs-number\">34</span>\r\n\r\nName<span class=\"hljs-attribute\">-Age</span>\r\nRoger<span class=\"hljs-subst\">-</span><span class=\"hljs-number\">30</span>\r\nRafel<span class=\"hljs-subst\">-</span><span class=\"hljs-number\">25</span>\r\nTiger<span class=\"hljs-subst\">-</span><span class=\"hljs-number\">27</span>\r\nMichael<span class=\"hljs-subst\">-</span><span class=\"hljs-number\">27</span>\r\nKobe<span class=\"hljs-subst\">-</span><span class=\"hljs-number\">34</span>\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>cut -d\"-\" 1,3 file_name</code></td>\r\n  <td>prints the 1 and 3 column of the file, and - is delimeter</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-14-convert-copy-files-with-dd\"><strong>Shell Scripting Tutorial-14:</strong> <em>Convert &amp; Copy Files with ‘dd’</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"usage-of-dd\">Usage of ‘dd’</h3>\r\n\r\n<p>converts all characters from lowercase to uppercase in a file. <br>\r\n<code>dd if=test of=test1 conv=ucase</code>  </p>\r\n\r\n<p>converts encoding to european based encoding. <br>\r\n<code>dd if=test of=test2 conv=ebcdic</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\ncat &gt; test\r\n<span class=\"hljs-comment\"># this is a test file.</span>\r\n\r\ndd <span class=\"hljs-keyword\">if</span>=test of=test1 conv=ucase <span class=\"hljs-comment\"># converts all lowercase character to uppercase with in a new file.</span>\r\ncat test\r\ncat test1\r\n\r\ndd <span class=\"hljs-keyword\">if</span>=test of=test2 conv=ebcdic <span class=\"hljs-comment\"># conerts encoding to european based encoding.</span>\r\ncat test\r\ncat test2\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs vhdl\">this <span class=\"hljs-keyword\">is</span> a test <span class=\"hljs-keyword\">file</span>.\r\n<span class=\"hljs-number\">0</span>+<span class=\"hljs-number\">1</span> records <span class=\"hljs-keyword\">in</span>\r\n<span class=\"hljs-number\">0</span>+<span class=\"hljs-number\">1</span> records <span class=\"hljs-keyword\">out</span>\r\n<span class=\"hljs-number\">21</span> bytes (<span class=\"hljs-number\">21</span> B) copied, <span class=\"hljs-number\">0.000277341</span> s, <span class=\"hljs-number\">75.7</span> kB/s\r\nthis <span class=\"hljs-keyword\">is</span> a test <span class=\"hljs-keyword\">file</span>.\r\nTHIS <span class=\"hljs-keyword\">IS</span> A TEST <span class=\"hljs-keyword\">FILE</span>.\r\n<span class=\"hljs-number\">0</span>+<span class=\"hljs-number\">1</span> records <span class=\"hljs-keyword\">in</span>\r\n<span class=\"hljs-number\">0</span>+<span class=\"hljs-number\">1</span> records <span class=\"hljs-keyword\">out</span>\r\n<span class=\"hljs-number\">21</span> bytes (<span class=\"hljs-number\">21</span> B) copied, <span class=\"hljs-number\">0.000301356</span> s, <span class=\"hljs-number\">69.7</span> kB/s\r\nthis <span class=\"hljs-keyword\">is</span> a test <span class=\"hljs-keyword\">file</span>.\r\n����@��@�@����@����K%</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>dd if=test of=test1 conv=ucase</code></td>\r\n  <td>converts all lowercase to uppercase in a new file</td>\r\n</tr>\r\n<tr>\r\n  <td><code>dd if=test of=test2 conv=ebcdic</code></td>\r\n  <td>converts encoding to european based encoding</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-15-get-help-view-fancy-text-reduce-file-size\"><strong>Shell Scripting Tutorial-15:</strong> <em>Get Help, View Fancy Text &amp; Reduce File Size</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"getting-help\">Getting Help</h3>\r\n\r\n<p><code>man &lt;command name&gt;</code> shows the help manual of the command. <br>\r\n<code>man cat</code>  </p>\r\n\r\n<p>exiting manual page by using Q key.  </p>\r\n\r\n\r\n\r\n<h3 id=\"view-fancy-text\">View Fancy Text</h3>\r\n\r\n<p><code>banner my name is mustafa celik</code> <br>\r\n<code>banner \"my name is mustafa celik\"</code> banner shows 10 character in one line.    </p>\r\n\r\n\r\n\r\n<h3 id=\"reduce-file-size\">Reduce File Size</h3>\r\n\r\n<p>reducing the size of a file. <br>\r\n<code>compress -v test</code>  </p>\r\n\r\n<p>printing compressed file in a readable format. <br>\r\n<code>zcat -v test.Z</code>  </p>\r\n\r\n<p>uncompressing the compressed file. <br>\r\n<code>uncompress test.Z</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\nman cat\r\n\r\nbanner my name is mustafa celik <span class=\"hljs-comment\"># prints fancy text</span>\r\nbanner <span class=\"hljs-string\">\"my name is mustafa celik\"</span> <span class=\"hljs-comment\"># prints fancy text in one line</span>\r\n\r\ncompress -v test <span class=\"hljs-comment\"># compress the file</span>\r\nzcat -v test.Z  <span class=\"hljs-comment\"># prints compressed file readable.</span>\r\n\r\nuncompress -v test.Z <span class=\"hljs-comment\"># uncompress the compresed file.</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs ruleslanguage\">Whole Man Page of cat command will be printed.\r\n\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#   </span>#\r\n #<span class=\"hljs-array\">#  </span>#<span class=\"hljs-array\">#    </span><span class=\"hljs-array\"># </span>#\r\n <span class=\"hljs-array\"># </span>#<span class=\"hljs-array\"># </span><span class=\"hljs-array\">#     </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span>#\r\n\r\n\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span>#<span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>######\r\n #<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#   </span>#<span class=\"hljs-array\">#  </span>#<span class=\"hljs-array\">#  </span>#\r\n <span class=\"hljs-array\"># </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\"># </span>#<span class=\"hljs-array\"># </span><span class=\"hljs-array\">#  </span>#####\r\n <span class=\"hljs-array\">#  </span><span class=\"hljs-array\"># </span><span class=\"hljs-array\">#  </span>#####<span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>#\r\n <span class=\"hljs-array\">#   </span>#<span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>######\r\n\r\n\r\n    <span class=\"hljs-array\">#     </span>####\r\n    <span class=\"hljs-array\">#    </span>#\r\n    <span class=\"hljs-array\">#     </span>####\r\n    <span class=\"hljs-array\">#         </span>#\r\n    <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span>#\r\n    <span class=\"hljs-array\">#     </span>####\r\n\r\n\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#   </span>###<span class=\"hljs-array\">#    </span>####<span class=\"hljs-array\">#    </span>#<span class=\"hljs-array\">#    </span>#####<span class=\"hljs-array\">#    </span>##\r\n #<span class=\"hljs-array\">#  </span>#<span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#        </span><span class=\"hljs-array\">#  </span>#\r\n <span class=\"hljs-array\"># </span>#<span class=\"hljs-array\"># </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#   </span>###<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>####<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#    </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span>#####<span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#       </span>######\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#    </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#   </span>###<span class=\"hljs-array\">#    </span>###<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#    </span>#\r\n\r\n\r\n  ###<span class=\"hljs-array\">#   </span>#####<span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#   </span>#\r\n <span class=\"hljs-array\">#       </span>####<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#    </span>####\r\n <span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#   </span>#\r\n  ###<span class=\"hljs-array\">#   </span>#####<span class=\"hljs-array\">#  </span>#####<span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span>#\r\n\r\n\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span>#<span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>#####<span class=\"hljs-array\">#             </span><span class=\"hljs-array\">#     </span>####\r\n #<span class=\"hljs-array\">#  </span>#<span class=\"hljs-array\">#    </span><span class=\"hljs-array\"># </span><span class=\"hljs-array\">#           </span>#<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#   </span>#<span class=\"hljs-array\">#  </span>#<span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#                  </span><span class=\"hljs-array\">#    </span>#\r\n <span class=\"hljs-array\"># </span>#<span class=\"hljs-array\"># </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#            </span><span class=\"hljs-array\"># </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\"># </span>#<span class=\"hljs-array\"># </span><span class=\"hljs-array\">#  </span>####<span class=\"hljs-array\">#              </span><span class=\"hljs-array\">#     </span>####\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#            </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\"># </span><span class=\"hljs-array\">#  </span>#####<span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#                  </span><span class=\"hljs-array\">#         </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#            </span><span class=\"hljs-array\">#   </span>#<span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#                  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#            </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>#####<span class=\"hljs-array\">#             </span><span class=\"hljs-array\">#     </span>####\r\n\r\ntest: No compression -- test unchanged\r\ngzip: test.Z: No such file or directory\r\ngzip: test.Z: No such file or directory\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>man &lt;command&gt;</code></td>\r\n  <td>shows the manuel of the command. Note: use Q key to quit.</td>\r\n</tr>\r\n<tr>\r\n  <td><code>banner some text</code></td>\r\n  <td>prints fancy text</td>\r\n</tr>\r\n<tr>\r\n  <td><code>banner \"some text\"</code></td>\r\n  <td>prints fancy text in one line. Note: limited to 10 character.</td>\r\n</tr>\r\n<tr>\r\n  <td><code>compress -v test</code></td>\r\n  <td>compresses the test file.</td>\r\n</tr>\r\n<tr>\r\n  <td><code>zcat -v test.Z</code></td>\r\n  <td>prints the readable version of the compressed file.</td>\r\n</tr>\r\n<tr>\r\n  <td><code>uncompress test.Z</code></td>\r\n  <td>uncompress the compressed file.</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-16-hello-world\"><strong>Shell Scripting Tutorial-16:</strong> <em>Hello World!</em></h2>\r\n\r\n<p>hello world example is implemented using <code>echo</code> command. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Hello World!\"</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs erlang-repl\"><span class=\"hljs-variable\">Hello</span> <span class=\"hljs-variable\">World</span><span class=\"hljs-exclamation_mark\">!</span></code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>echo \"Hello World!\"</code></td>\r\n  <td>prints hello world to terminal.</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-17-use-command-in-your-script\"><strong>Shell Scripting Tutorial-17:</strong> <em>Use Command in Your Script</em></h2>\r\n\r\n<p>Use commands in the script. <br>\r\n<code>pwd</code> <br>\r\n<code>ls -l</code> <br>\r\n<code>banner \"The End\"</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># Shell_scripting_tutorial_17: Use Command in Your Script</span>\r\n\r\n<span class=\"hljs-built_in\">pwd</span>\r\nls <span class=\"hljs-operator\">-l</span>\r\nbanner <span class=\"hljs-string\">\"The End\"</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs ruleslanguage\">/home/joker/PycharmProjects/bash_script\r\ntotal <span class=\"hljs-number\">348</span>\r\n-rw-r--r-- <span class=\"hljs-number\">1</span> joker joker    <span class=\"hljs-number\">34</span> Aug <span class=\"hljs-number\">31</span> <span class=\"hljs-number\">17</span>:<span class=\"hljs-number\">11</span> animals\r\n-rw-r--r-- <span class=\"hljs-number\">1</span> joker joker    <span class=\"hljs-number\">18</span> Aug <span class=\"hljs-number\">27</span> <span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">07</span> commandlist_tutorial_50\r\n-rw-r--r-- <span class=\"hljs-number\">1</span> joker joker   <span class=\"hljs-number\">507</span> Aug <span class=\"hljs-number\">27</span> <span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">07</span> create_consecutive_files.sh\r\n-rw-r--r-- <span class=\"hljs-number\">1</span> joker joker     <span class=\"hljs-number\">0</span> Aug <span class=\"hljs-number\">31</span> <span class=\"hljs-number\">16</span>:<span class=\"hljs-number\">59</span> empty_file1\r\n-rw-r--r-- <span class=\"hljs-number\">1</span> joker joker     <span class=\"hljs-number\">0</span> Aug <span class=\"hljs-number\">31</span> <span class=\"hljs-number\">16</span>:<span class=\"hljs-number\">59</span> empty_file2\r\n-rw-r--r-- <span class=\"hljs-number\">1</span> joker joker     <span class=\"hljs-number\">0</span> Aug <span class=\"hljs-number\">31</span> <span class=\"hljs-number\">16</span>:<span class=\"hljs-number\">59</span> empty_file3\r\ndrwxr-xr-x <span class=\"hljs-number\">2</span> joker joker  <span class=\"hljs-number\">4096</span> Aug <span class=\"hljs-number\">31</span> <span class=\"hljs-number\">16</span>:<span class=\"hljs-number\">59</span> folder1\r\n\r\n######<span class=\"hljs-array\">#                         </span>#######\r\n   <span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>#####<span class=\"hljs-array\">#         </span><span class=\"hljs-array\">#        </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>#####\r\n   <span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#              </span><span class=\"hljs-array\">#        </span>#<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span>#\r\n   <span class=\"hljs-array\">#     </span>#####<span class=\"hljs-array\">#  </span>####<span class=\"hljs-array\">#          </span>####<span class=\"hljs-array\">#    </span><span class=\"hljs-array\"># </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span>#\r\n   <span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#              </span><span class=\"hljs-array\">#        </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\"># </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span>#\r\n   <span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#              </span><span class=\"hljs-array\">#        </span><span class=\"hljs-array\">#   </span>#<span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span>#\r\n   <span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>#####<span class=\"hljs-array\">#         </span>######<span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span>#####\r\n\r\n</code></pre>\r\n\r\n<h2 id=\"shell-scripting-tutorial-18-shell-variables-grab-user-input-using-read\"><strong>Shell Scripting Tutorial-18:</strong> <em>Shell Variables, Grab User Input Using ‘read’</em></h2>\r\n\r\n\r\n\r\n<h3 id=\"shell-variables\">Shell Variables</h3>\r\n\r\n<p>Shell scripting has some rules for variables. <br>\r\n- variable names starts with an <strong>alphabet</strong> or <strong>underscore</strong> symbol. <br>\r\n- variables are case sensitive. <code>my_var</code> and <code>MY_VAR</code> are different variables.  </p>\r\n\r\n\r\n\r\n<h3 id=\"grab-user-input-using-read\">Grab User Input Using ‘read’</h3>\r\n\r\n<p><strong>read</strong> is used to get user input from terminal. <br>\r\n<code>echo \"Enter your name: \"</code> <br>\r\n<code>read name</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Please enter your name: \"</span>\r\n<span class=\"hljs-built_in\">read</span> my_name\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Hello <span class=\"hljs-variable\">$my_name</span>\"</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs applescript\">Please enter your <span class=\"hljs-property\">name</span>: \r\nmustafa celik\r\nHello mustafa celik\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>read name</code></td>\r\n  <td>reads input from user and assign it to name variable</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-19-positional-parameters\"><strong>Shell Scripting Tutorial-19:</strong> <em>Positional Parameters</em></h2>\r\n\r\n<p>Renaming a file using one positional parameter. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># This file takes a file name as an argument and renames it.</span>\r\n<span class=\"hljs-comment\"># run following commands for the script:</span>\r\n<span class=\"hljs-comment\"># cat &gt; test</span>\r\n<span class=\"hljs-comment\"># this is a test file.</span>\r\n<span class=\"hljs-comment\"># ctrl+d</span>\r\n<span class=\"hljs-comment\"># sh video_tutorial_19.sh test</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"provide a file name to change: \"</span>\r\n<span class=\"hljs-built_in\">read</span> name\r\nmv <span class=\"hljs-variable\">$1</span> <span class=\"hljs-variable\">$name</span>\r\ncat <span class=\"hljs-variable\">$name</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">provide <span class=\"hljs-operator\">a</span> <span class=\"hljs-built_in\">file</span> name <span class=\"hljs-built_in\">to</span> change: \r\nnew_name\r\nfalkdsjflad sgadg\r\n</code></pre>\r\n\r\n<h2 id=\"shell-scripting-tutorial-20-more-on-positional-parameters\"><strong>Shell Scripting Tutorial-20:</strong> <em>More on Positional Parameters</em></h2>\r\n\r\n<p>setting positional parameters from the content of a file. <br>\r\n<code>set cat test</code> this usage is wrong which assigns <script type=\"math/tex\" id=\"MathJax-Element-13\">1:cat and </script>2:test <br>\r\n<code>echo $*</code> <br>\r\n“set `cat test`”  this assigns file content as parameters <br>\r\n<code>cat test</code> <br>\r\n<code>echo $*</code>  </p>\r\n\r\n<p>özetle <br>\r\nreverse quotes: ters tirnak isareti <br>\r\naccent grave: tirnak arasinda komut calistirilan kisim <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\nchmod <span class=\"hljs-number\">744</span> <span class=\"hljs-variable\">$1</span>\r\nls <span class=\"hljs-operator\">-l</span> <span class=\"hljs-variable\">$1</span>\r\n\r\n<span class=\"hljs-keyword\">set</span> word1 word2 word3\r\n<span class=\"hljs-built_in\">echo</span> $*</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs brainfuck\"><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">rw</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">r</span><span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">r</span><span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span> <span class=\"hljs-comment\">1</span> <span class=\"hljs-comment\">joker</span> <span class=\"hljs-comment\">joker</span>   <span class=\"hljs-comment\">375</span> <span class=\"hljs-comment\">Aug</span> <span class=\"hljs-comment\">27</span> <span class=\"hljs-comment\">21:07</span> <span class=\"hljs-comment\">video_tutorial_60</span><span class=\"hljs-string\">.</span><span class=\"hljs-comment\">sh</span>\r\n<span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">rw</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">r</span><span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">r</span><span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span> <span class=\"hljs-comment\">1</span> <span class=\"hljs-comment\">joker</span> <span class=\"hljs-comment\">joker</span>   <span class=\"hljs-comment\">201</span> <span class=\"hljs-comment\">Aug</span> <span class=\"hljs-comment\">27</span> <span class=\"hljs-comment\">21:07</span> <span class=\"hljs-comment\">video_tutorial_61</span><span class=\"hljs-string\">.</span><span class=\"hljs-comment\">sh</span>\r\n<span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">rw</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">r</span><span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">r</span><span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span> <span class=\"hljs-comment\">1</span> <span class=\"hljs-comment\">joker</span> <span class=\"hljs-comment\">joker</span>     <span class=\"hljs-comment\">0</span> <span class=\"hljs-comment\">Aug</span> <span class=\"hljs-comment\">26</span> <span class=\"hljs-comment\">02:08</span> <span class=\"hljs-comment\">video_tutorial_62</span><span class=\"hljs-string\">.</span><span class=\"hljs-comment\">sh</span>\r\n<span class=\"hljs-comment\">word1</span> <span class=\"hljs-comment\">word2</span> <span class=\"hljs-comment\">word3</span>\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td>set <code>cat test</code></td>\r\n  <td>assigns content of test file to positional parameters</td>\r\n</tr>\r\n<tr>\r\n  <td>set <code>who am i</code></td>\r\n  <td>assigns output of the command to positional parameters</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-21-reverse-quotes-accent-graves\"><strong>Shell Scripting Tutorial-21:</strong> <em>Reverse Quotes &amp; Accent Graves</em></h2>\r\n\r\n<p><code>set shell scripting is cool</code> <br>\r\n<code>echo $1</code> <br>\r\n<code>echo $2</code> <br>\r\n<code>echo $3</code> <br>\r\n<code>echo $4</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># Renames a file to file.name</span>\r\n<span class=\"hljs-comment\"># Where name is the login name of the user executing the script</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># run following commands before the script:</span>\r\n<span class=\"hljs-comment\"># cat &gt; test</span>\r\n<span class=\"hljs-comment\"># my neighbour's dog is annoying.</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># set cat test</span>\r\n<span class=\"hljs-comment\"># echo $*</span>\r\n<span class=\"hljs-comment\"># set `cat test`</span>\r\n<span class=\"hljs-comment\"># echo $*</span>\r\n\r\nname=<span class=\"hljs-variable\">$1</span>\r\n<span class=\"hljs-keyword\">set</span> `who am i`\r\nmv <span class=\"hljs-variable\">$name</span> <span class=\"hljs-variable\">$name</span>.<span class=\"hljs-variable\">$1</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs vhdl\"># name <span class=\"hljs-keyword\">of</span> the <span class=\"hljs-keyword\">file</span> should be changed. <span class=\"hljs-keyword\">type</span> ls <span class=\"hljs-keyword\">to</span> observe.</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>set word1 word2 word3</code></td>\r\n  <td>assigns <script type=\"math/tex\" id=\"MathJax-Element-25\">1: word1 </script>2: word2 and $3: word3</td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo $*</code></td>\r\n  <td>prints all positional parameters</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-22-count-the-number-of-command-line-arguments-using\"><strong>Shell Scripting Tutorial-22:</strong> <em>Count the Number of Command Line Arguments Using ‘$#’</em></h2>\r\n\r\n<p>Finding number of positional parameters that comes from <strong>command line</strong> and <strong><code>set</code></strong> command. <br>\r\n<code>set this is video tutorial about shell scripting</code> <br>\r\n<code>echo $#</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># Run following command before the script:</span>\r\n<span class=\"hljs-comment\"># sh vidoe_tutorial_22.sh *</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> The total number of items <span class=\"hljs-keyword\">in</span> current directory is=<span class=\"hljs-variable\">$#</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">The total <span class=\"hljs-built_in\">number</span> <span class=\"hljs-operator\">of</span> <span class=\"hljs-keyword\">items</span> <span class=\"hljs-operator\">in</span> current <span class=\"hljs-built_in\">directory</span> is=<span class=\"hljs-number\">91</span></code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>echo $#</code></td>\r\n  <td>prints the number of parameter.</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-23-math-on-integers-using-expr\"><strong>Shell Scripting Tutorial-23:</strong> <em>Math on Integers Using ‘expr’</em></h2>\r\n\r\n<p>arithmetic operations on shell script. <br>\r\n“a=30 b=15” <br>\r\n“echo <code>expr $a + $b</code>” <br>\r\n“echo <code>expr $a - $b</code>” <br>\r\n“echo <code>expr $a \\* $b</code>” <br>\r\n“echo <code>expr $a / $b</code>” <br>\r\n“echo <code>expr $a % $b</code>” <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># Arithmetic operations</span>\r\n\r\na=<span class=\"hljs-number\">30</span> b=<span class=\"hljs-number\">15</span>\r\n<span class=\"hljs-built_in\">echo</span> `expr <span class=\"hljs-variable\">$a</span> + <span class=\"hljs-variable\">$b</span>`\r\n<span class=\"hljs-built_in\">echo</span> `expr <span class=\"hljs-variable\">$a</span> - <span class=\"hljs-variable\">$b</span>`\r\n<span class=\"hljs-built_in\">echo</span> `expr <span class=\"hljs-variable\">$a</span> \\* <span class=\"hljs-variable\">$b</span>`\r\n<span class=\"hljs-built_in\">echo</span> `expr <span class=\"hljs-variable\">$a</span> / <span class=\"hljs-variable\">$b</span>`\r\n<span class=\"hljs-built_in\">echo</span> `expr <span class=\"hljs-variable\">$a</span> % <span class=\"hljs-variable\">$b</span>`</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \">45\r\n15\r\n450\r\n2\r\n0\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td>echo <code>expr $a + $b</code></td>\r\n  <td>addition</td>\r\n</tr>\r\n<tr>\r\n  <td>echo <code>expr $a - $b</code></td>\r\n  <td>substraction</td>\r\n</tr>\r\n<tr>\r\n  <td>echo <code>expr $a \\* $b</code></td>\r\n  <td>multiplication</td>\r\n</tr>\r\n<tr>\r\n  <td>echo <code>expr $a / $b</code></td>\r\n  <td>division</td>\r\n</tr>\r\n<tr>\r\n  <td>echo <code>expr $a % $b</code></td>\r\n  <td>modular division</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-24-operator-precedence\"><strong>Shell Scripting Tutorial-24:</strong> <em>Operator Precedence</em></h2>\r\n\r\n<p>/, *, % operations have first priority. <br>\r\n+, - operations have second priority.  </p>\r\n\r\n<p>echo <code>expr $a \\* \\( $b + $c \\) / $d</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># Arithmetic Operation Precedence</span>\r\n\r\na=<span class=\"hljs-number\">30</span> b=<span class=\"hljs-number\">15</span> c=<span class=\"hljs-number\">2</span> d=<span class=\"hljs-number\">5</span>\r\n<span class=\"hljs-built_in\">echo</span> `expr <span class=\"hljs-variable\">$a</span> \\* \\( <span class=\"hljs-variable\">$b</span> + <span class=\"hljs-variable\">$c</span> \\) / <span class=\"hljs-variable\">$d</span>`</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \">102</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td>echo <code>expr $a \\* \\( $b + $c \\) / $d</code></td>\r\n  <td>operation precedence using \\</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-25-math-on-real-numbers\"><strong>Shell Scripting Tutorial-25:</strong> <em>Math on Real Numbers</em></h2>\r\n\r\n<p><strong>bc</strong> usage is explained in this tutorial. <br>\r\n<code>echo $a + $b | bc</code> <br>\r\n<code>echo $a - $b | bc</code> <br>\r\n<code>echo $a \\* $b | bc</code> <br>\r\n<code>echo $a / $b | bc</code>  </p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># Floating Point Arithmetic Operations</span>\r\n\r\na=<span class=\"hljs-number\">10.5</span>\r\nb=<span class=\"hljs-number\">3.5</span>\r\n\r\nc=`<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$a</span> + <span class=\"hljs-variable\">$b</span> | bc`\r\nd=`<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$a</span> - <span class=\"hljs-variable\">$b</span> | bc`\r\ne=`<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$a</span> \\* <span class=\"hljs-variable\">$b</span> | bc`\r\nf=`<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$a</span> / <span class=\"hljs-variable\">$b</span> | bc`\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$c</span> <span class=\"hljs-variable\">$d</span> <span class=\"hljs-variable\">$e</span> <span class=\"hljs-variable\">$f</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \">14.0 7.0 36.7 3\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>echo $a + $b (or) bc</code></td>\r\n  <td>bs is used for floating point operations with pipe or</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-26-escape-sequences\"><strong>Shell Scripting Tutorial-26:</strong> <em>Escape Sequences</em></h2>\r\n\r\n<p>customizing(text color, border etc.) the <strong>echo</strong> outputs. <br>\r\n- new line: <strong>\\n</strong> -&gt; <code>echo \"hello \\nworld\"</code> <br>\r\n- return: <strong>\\r</strong> -&gt; <code>echo \"hello \\rworld\"</code> basa donerek üzerine yazar. <br>\r\n- tab: <strong>\\t</strong> -&gt; <code>echo \"hello \\tworld\"</code> <br>\r\n- backspace:  <strong>\\b</strong> -&gt; <code>echo \"Hey World, \\b\\b\\b\\b\\b\\b\\bwhat's up?\"</code> bir onceki karakterin uzerine yaziyor. <br>\r\n- bold: <strong>\\033[1m</strong> <strong>\\033[0m</strong> -&gt; <code>echo \"\\033[1mHey World, what's up?\\033[0m\"</code> writes the text in bold format <br>\r\n- black background: <strong>\\033[7m</strong> <strong>\\033[0m</strong> -&gt; <code>echo \"\\033[7mHey World, what's up?\\033[0m\"</code> prints black background <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># Escape Sequences</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Hey World, \\nwhat's up?\"</span> <span class=\"hljs-comment\"># new line</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Hey World, \\rwhat's\"</span> <span class=\"hljs-comment\"># starts from beginning and prints on the previos one</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Hey World, \\twhat's up?\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Hey World, \\b\\b\\b\\b\\b\\b\\bwhat's up?\"</span> <span class=\"hljs-comment\"># comes back one character</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\033[1mHey World, what's up?\\033[0m\"</span> <span class=\"hljs-comment\"># writes the text in bold format</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\033[7mHey World, what's up?\\033[0m\"</span> <span class=\"hljs-comment\"># writes the text with black background</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs vbnet\">Hey World, \r\nwhat<span class=\"hljs-comment\">'s up?</span>\r\nwhat<span class=\"hljs-comment\">'srld, </span>\r\nHey World,  what<span class=\"hljs-comment\">'s up?</span>\r\nHey what<span class=\"hljs-comment\">'s up?</span>\r\nHey World, what<span class=\"hljs-comment\">'s up?</span>\r\nHey World, what<span class=\"hljs-comment\">'s up?</span>\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>echo \"hello \\nworld\"</code></td>\r\n  <td>new line</td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo \"hello \\rworld\"</code></td>\r\n  <td>return character writes from the beginning over the previous print</td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo \"hello \\tworld\"</code></td>\r\n  <td>tab character</td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo \"Hey World, \\b\\b\\b\\b\\b\\b\\bwhat's up?\"</code></td>\r\n  <td>backspace comes 1 character back</td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo \"\\033[1mHey World, what's up?\\033[0m\"</code></td>\r\n  <td>bold character</td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo \"\\033[7mHey World, what's up?\\033[0m\"</code></td>\r\n  <td>black background</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-27-do-cool-things-with-tput\"><strong>Shell Scripting Tutorial-27:</strong> <em>Do Cool Things with ‘tput’</em></h2>\r\n\r\n<p>clearing terminal. <br>\r\n<code>tput clear</code> <br>\r\ndetermining the number of rows and  columns of the terminal. <br>\r\n<code>tput lines</code> shows number of rows. <br>\r\n<code>tput cols</code> shows number of columns. <br>\r\nprinting character in bold. <br>\r\n<code>tput bold</code> <br>\r\npositioning the cursor to a specific row and column. <br>\r\n<code>tput cup 15 20</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># tput-in action</span>\r\n\r\ntput clear\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Total number of rows on screen=\\c\"</span>\r\ntput lines\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Total number of columns on screen=\\c\"</span>\r\ntput cols\r\ntput cup <span class=\"hljs-number\">15</span> <span class=\"hljs-number\">20</span> <span class=\"hljs-comment\"># cursor position row, column</span>\r\ntput bold\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"This is a bold text\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\033[0mbye bye\"</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">Total <span class=\"hljs-built_in\">number</span> <span class=\"hljs-operator\">of</span> rows <span class=\"hljs-command\"><span class=\"hljs-keyword\">on</span> <span class=\"hljs-title\">screen</span>=<span class=\"hljs-title\">35</span></span>\r\nTotal <span class=\"hljs-built_in\">number</span> <span class=\"hljs-operator\">of</span> columns <span class=\"hljs-command\"><span class=\"hljs-keyword\">on</span> <span class=\"hljs-title\">screen</span>=<span class=\"hljs-title\">134</span></span>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    This is <span class=\"hljs-operator\">a</span> bold <span class=\"hljs-keyword\">text</span>\r\nbye bye\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>tput clear</code></td>\r\n  <td>clear the terminal</td>\r\n</tr>\r\n<tr>\r\n  <td><code>tput lines</code></td>\r\n  <td>Total number of rows on screen</td>\r\n</tr>\r\n<tr>\r\n  <td><code>tput cols</code></td>\r\n  <td>Total number of columns on screen</td>\r\n</tr>\r\n<tr>\r\n  <td><code>tput cup 15 20</code></td>\r\n  <td>position cursor to new row and column</td>\r\n</tr>\r\n<tr>\r\n  <td><code>tput bold</code></td>\r\n  <td>print in bold format</td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo \"\\033[0mbye bye\"</code></td>\r\n  <td>ends printing in bold</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-28-if-then-statement-in-action\"><strong>Shell Scripting Tutorial-28:</strong> <em>‘if-then’ Statement in Action</em></h2>\r\n\r\n<p>terminalde her komut calistiktan sonra, komutun basarili olup olmadigini gosteren bir sayi doner. <br>\r\nbu ciktiyi gormek icin su komut kullanilir: <br>\r\n<code>mkdir new</code> <br>\r\n<code>echo $?</code>  </p>\r\n\r\n<p>renaming a file using if statement. <br>\r\n<code>if mv source.txt target.txt</code> <br>\r\n<code>then</code> <br>\r\n<code>echo \"Your file has been succesfully renamed.\"</code> <br>\r\n<code>fi</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># if-then statement in action</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># run the following command before the script:</span>\r\n<span class=\"hljs-comment\"># touch test</span>\r\n<span class=\"hljs-comment\"># sh video_tutorial_28.sh </span>\r\n<span class=\"hljs-comment\"># sh video_tutorial_28.sh</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter source and target file names:\"</span>\r\n<span class=\"hljs-built_in\">read</span> <span class=\"hljs-built_in\">source</span> target\r\n<span class=\"hljs-keyword\">if</span> mv <span class=\"hljs-variable\">$source</span> <span class=\"hljs-variable\">$target</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Your file has been successfully renamed.\"</span>\r\n<span class=\"hljs-keyword\">fi</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">Enter source <span class=\"hljs-operator\">and</span> target <span class=\"hljs-built_in\">file</span> names:\r\ntest new_name     \r\nYour <span class=\"hljs-built_in\">file</span> has been successfully renamed.\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td>usage of if-then statement</td>\r\n</tr>\r\n<tr>\r\n  <td><code>if something_true</code></td>\r\n</tr>\r\n<tr>\r\n  <td><code>then</code></td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo \"condition is correct\"</code></td>\r\n</tr>\r\n<tr>\r\n  <td><code>fi</code></td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-29-the-if-then-else-statement\"><strong>Shell Scripting Tutorial-29:</strong> <em>The ‘if-then-else’ Statement</em></h2>\r\n\r\n<p>renaming a file using if statement. <br>\r\n<code>if mv source.txt target.txt</code> <br>\r\n<code>then</code> <br>\r\n<code>echo \"Your file has been successfully renamed.\"</code> <br>\r\n<code>else</code> <br>\r\n<code>echo \"file has NOT been  renamed.\"</code> <br>\r\n<code>fi</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># if-then-else statement in action</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># run the following command before the script:</span>\r\n<span class=\"hljs-comment\"># touch test</span>\r\n<span class=\"hljs-comment\"># sh video_tutorial_29.sh</span>\r\n<span class=\"hljs-comment\"># sh video_tutorial_29.sh</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter source and target file names.\"</span>\r\n<span class=\"hljs-built_in\">read</span> <span class=\"hljs-built_in\">source</span> target\r\n<span class=\"hljs-keyword\">if</span> mv <span class=\"hljs-variable\">$source</span> <span class=\"hljs-variable\">$target</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Your file has been successfully renamed.\"</span>\r\n<span class=\"hljs-keyword\">else</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Your file has NOT been successfully renamed.\"</span>\r\n<span class=\"hljs-keyword\">fi</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">bash_script@pc $ sh video_tutorial_29.sh \r\nEnter source <span class=\"hljs-operator\">and</span> target <span class=\"hljs-built_in\">file</span> names.\r\ntest new_name\r\nYour <span class=\"hljs-built_in\">file</span> has been successfully renamed.\r\nbash_script@pc $ sh video_tutorial_29.sh \r\nEnter source <span class=\"hljs-operator\">and</span> target <span class=\"hljs-built_in\">file</span> names.\r\ntest new_name\r\nmv: cannot stat ‘test’: No such <span class=\"hljs-built_in\">file</span> <span class=\"hljs-operator\">or</span> <span class=\"hljs-built_in\">directory</span>\r\nYour <span class=\"hljs-built_in\">file</span> has NOT been successfully renamed.</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td>usage of if-then statement</td>\r\n</tr>\r\n<tr>\r\n  <td><code>if something_true_or_false</code></td>\r\n</tr>\r\n<tr>\r\n  <td><code>then</code></td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo \"condition is true\"</code></td>\r\n</tr>\r\n<tr>\r\n  <td><code>else</code></td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo \"condition is false\"</code></td>\r\n</tr>\r\n<tr>\r\n  <td><code>fi</code></td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-30-run-checks-on-numbers\"><strong>Shell Scripting Tutorial-30:</strong> <em>Run Checks on Numbers</em></h2>\r\n\r\n<p>if checks statements are following: <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter a number between 10 and 20: \\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> num\r\n\r\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$num</span> <span class=\"hljs-operator\">-lt</span> <span class=\"hljs-number\">10</span> ]\r\n<span class=\"hljs-keyword\">then</span> \r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"That was under the belt partner.\"</span>\r\n<span class=\"hljs-keyword\">elif</span> [ <span class=\"hljs-variable\">$num</span> <span class=\"hljs-operator\">-gt</span> <span class=\"hljs-number\">20</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"That went over my head.\"</span>\r\n<span class=\"hljs-keyword\">elif</span> [ <span class=\"hljs-variable\">$num</span> <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">10</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"That is equal to 10.\"</span>\r\n<span class=\"hljs-keyword\">elif</span> [ <span class=\"hljs-variable\">$num</span> -le <span class=\"hljs-number\">10</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"That is less than and equal to 10.\"</span>\r\n<span class=\"hljs-keyword\">elif</span> [ <span class=\"hljs-variable\">$num</span> -ge <span class=\"hljs-number\">10</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"That is greater than and equal to 10.\"</span>\r\n<span class=\"hljs-keyword\">elif</span> [ <span class=\"hljs-variable\">$num</span> <span class=\"hljs-operator\">-ne</span> <span class=\"hljs-number\">10</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"That is not equal to 10.\"</span>\r\n<span class=\"hljs-keyword\">else</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Now you are making sense.\"</span>\r\n<span class=\"hljs-keyword\">fi</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs applescript\">Enter a <span class=\"hljs-type\">number</span> <span class=\"hljs-keyword\">between</span> <span class=\"hljs-number\">10</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">20</span>: <span class=\"hljs-number\">12</span>\r\nThat <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">greater than</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">equal</span> <span class=\"hljs-keyword\">to</span> <span class=\"hljs-number\">10.</span></code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>-eq</code></td>\r\n  <td>equal</td>\r\n</tr>\r\n<tr>\r\n  <td><code>-lt</code></td>\r\n  <td>less than</td>\r\n</tr>\r\n<tr>\r\n  <td><code>-gt</code></td>\r\n  <td>greater than</td>\r\n</tr>\r\n<tr>\r\n  <td><code>-le</code></td>\r\n  <td>less than and equal</td>\r\n</tr>\r\n<tr>\r\n  <td><code>-ge</code></td>\r\n  <td>greater than and equal</td>\r\n</tr>\r\n<tr>\r\n  <td><code>-ne</code></td>\r\n  <td>not equal</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-31-run-checks-on-files\"><strong>Shell Scripting Tutorial-31:</strong> <em>Run Checks on Files</em></h2>\r\n\r\n<p><strong>character space file</strong>: text files <br>\r\n<strong>block space file</strong>: video and image files which can not be displayed by text editor <br>\r\n<strong>directory space file</strong>: folders are also a file  </p>\r\n\r\n<p><code>if [ -f $fname ]</code> checks is it file or not.  </p>\r\n\r\n<p><strong>-f</strong>: checks for file <br>\r\n<strong>-d</strong>: checks for directory <br>\r\n<strong>-c</strong>: checks for character space file(text file) <br>\r\n<strong>-b</strong>: checks for block space file(image, video) <br>\r\n<strong>-r</strong>: checks read permission <br>\r\n<strong>-w</strong>: checks write permission <br>\r\n<strong>-x</strong>: checks execute permission <br>\r\n<strong>-s</strong>: checks if the file size is greater 0 or not <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter a name: \\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> fname\r\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-operator\">-f</span> <span class=\"hljs-variable\">$fname</span> ] <span class=\"hljs-comment\"># checks file</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You indeed entered a file name.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-operator\">-d</span> <span class=\"hljs-variable\">$fname</span> ] <span class=\"hljs-comment\"># checks directory</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You indeed entered a folder name.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> [ -c <span class=\"hljs-variable\">$fname</span> ] <span class=\"hljs-comment\"># checks character space file</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You indeed entered a character space(text) file name.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> [ -b <span class=\"hljs-variable\">$fname</span> ] <span class=\"hljs-comment\"># checks block space file</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You indeed entered a block space(image,videp) file name.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> [ -r <span class=\"hljs-variable\">$fname</span> ] <span class=\"hljs-comment\"># checks read permission</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"File has read permission.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> [ -w <span class=\"hljs-variable\">$fname</span> ] <span class=\"hljs-comment\"># checks write permission</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"File has write permission.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> [ -x <span class=\"hljs-variable\">$fname</span> ] <span class=\"hljs-comment\"># checks execute permission</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"File has execute permission.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-operator\">-s</span> <span class=\"hljs-variable\">$fname</span> ] <span class=\"hljs-comment\"># checks size is greater than 0 or not</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"File size is gretaer than zero.\"</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">Enter <span class=\"hljs-operator\">a</span> name: new_name\r\nYou indeed entered <span class=\"hljs-operator\">a</span> <span class=\"hljs-built_in\">file</span> name.\r\nFile has <span class=\"hljs-built_in\">read</span> permission.\r\nFile has <span class=\"hljs-built_in\">write</span> permission.\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>if [ -f $fname ]</code></td>\r\n  <td>checks file or not</td>\r\n</tr>\r\n<tr>\r\n  <td><code>if [ -d $fname ]</code></td>\r\n  <td>checks directory or not</td>\r\n</tr>\r\n<tr>\r\n  <td><code>if [ -c $fname ]</code></td>\r\n  <td>checks character space file or not</td>\r\n</tr>\r\n<tr>\r\n  <td><code>if [ -b $fname ]</code></td>\r\n  <td>checks block space file or not</td>\r\n</tr>\r\n<tr>\r\n  <td><code>if [ -r $fname ]</code></td>\r\n  <td>checks has read permission or not</td>\r\n</tr>\r\n<tr>\r\n  <td><code>if [ -w $fname ]</code></td>\r\n  <td>checks has write permission or not</td>\r\n</tr>\r\n<tr>\r\n  <td><code>if [ -x $fname ]</code></td>\r\n  <td>checks has execute permission or not</td>\r\n</tr>\r\n<tr>\r\n  <td><code>if [ -s $fname ]</code></td>\r\n  <td>checks size is greater than 0 or not</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-32-append-text-to-a-file-through-shell-script\"><strong>Shell Scripting Tutorial-32:</strong> <em>Append Text to a File Through Shell Script</em></h2>\r\n\r\n<p>usage of the if else statement and file checks command. <br>\r\nexample code: <br>\r\n<code>echo \"Enter file name:\\c\"</code> <br>\r\n<code>read fname</code> <br>\r\n<code>if [ -f $fname ]</code> <br>\r\n<code>then</code> <br>\r\n<code>if [ -w $fname ]</code> <br>\r\n<code>then</code> <br>\r\n<code>echo \"Type matter to append. To quit press ctrl+d.\"</code> <br>\r\n<code>cat &gt;&gt; $fname</code> <br>\r\n<code>else</code> <br>\r\n<code>echo \"You do not have permission to write.\"</code> <br>\r\n<code>fi</code> <br>\r\n<code>fi</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># 1. script ask users to enter a name.</span>\r\n<span class=\"hljs-comment\"># 2. check the folder exist or not</span>\r\n<span class=\"hljs-comment\"># 3. if file exists check the user has write permission.</span>\r\n<span class=\"hljs-comment\"># 4. if the user has write permission, presents append option to user.</span>\r\n<span class=\"hljs-comment\"># 5. if the user has not write permission, display message show not permitted.</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter file name:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> fname\r\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-operator\">-f</span> <span class=\"hljs-variable\">$fname</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-keyword\">if</span> [ -w <span class=\"hljs-variable\">$fname</span> ]\r\n    <span class=\"hljs-keyword\">then</span>\r\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Type matter to append. To quit press ctrl+d.\"</span>\r\n        cat &gt;&gt; <span class=\"hljs-variable\">$fname</span>\r\n    <span class=\"hljs-keyword\">else</span>\r\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You do not have permission to write.\"</span>\r\n    <span class=\"hljs-keyword\">fi</span>\r\n<span class=\"hljs-keyword\">fi</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs vhdl\">Enter <span class=\"hljs-keyword\">file</span> name:new_name\r\n<span class=\"hljs-keyword\">Type</span> matter <span class=\"hljs-keyword\">to</span> append. <span class=\"hljs-keyword\">To</span> quit press ctrl+d.\r\nskdg\r\nssdgfs\r\n</code></pre>\r\n\r\n<h2 id=\"shell-scripting-tutorial-33-run-checks-on-strings\"><strong>Shell Scripting Tutorial-33:</strong> <em>Run Checks on Strings</em></h2>\r\n\r\n<p>string checks: <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># comparison of the strings (string checks)</span>\r\n\r\nstr1=<span class=\"hljs-string\">\"Hey You!\"</span>\r\nstr2=<span class=\"hljs-string\">\"What's up?\"</span>\r\nstr3=<span class=\"hljs-string\">\"\"</span> <span class=\"hljs-comment\"># null variable</span>\r\nstr3=   <span class=\"hljs-comment\"># null variable</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"str1: <span class=\"hljs-variable\">$str1</span>\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"str2: <span class=\"hljs-variable\">$str2</span>\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"str3: <span class=\"hljs-variable\">$str3</span>\"</span>\r\n\r\n\r\n[ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$str1</span>\"</span> = <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$str2</span>\"</span> ] <span class=\"hljs-comment\"># equal</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"str1 = str2 \\t-&gt; $?\"</span>\r\n\r\n[ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$str1</span>\"</span> != <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$str2</span>\"</span> ] <span class=\"hljs-comment\"># not equal</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"str1 != str2 \\t-&gt; $?\"</span>\r\n\r\n[ -n <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$str1</span>\"</span> ] <span class=\"hljs-comment\"># greater than zero</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"[ -n str1 ] \\t-&gt; $?\"</span>\r\n\r\n[ -n <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$str3</span>\"</span> ] <span class=\"hljs-comment\"># greater than zero</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"[ -n str3 ] \\t-&gt; $?\"</span>\r\n\r\n[ -z <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$str1</span>\"</span> ] <span class=\"hljs-comment\"># length of string is zero or not?</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"[ -z str1 ] \\t-&gt; $?\"</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs erlang-repl\"><span class=\"hljs-function_or_atom\">str1</span>: <span class=\"hljs-variable\">Hey</span> <span class=\"hljs-variable\">You</span><span class=\"hljs-exclamation_mark\">!</span>\r\n<span class=\"hljs-function_or_atom\">str2</span>: <span class=\"hljs-variable\">What's</span> <span class=\"hljs-function_or_atom\">up</span>?\r\n<span class=\"hljs-function_or_atom\">str3</span>: \r\n<span class=\"hljs-function_or_atom\">str1</span> = <span class=\"hljs-function_or_atom\">str2</span>     <span class=\"hljs-arrow\">-&gt;</span> <span class=\"hljs-number\">1</span>\r\n<span class=\"hljs-function_or_atom\">str1</span> <span class=\"hljs-exclamation_mark\">!</span>= <span class=\"hljs-function_or_atom\">str2</span>    <span class=\"hljs-arrow\">-&gt;</span> <span class=\"hljs-number\">0</span>\r\n[ -<span class=\"hljs-function_or_atom\">n</span> <span class=\"hljs-function_or_atom\">str1</span> ]     <span class=\"hljs-arrow\">-&gt;</span> <span class=\"hljs-number\">0</span>\r\n[ -<span class=\"hljs-function_or_atom\">n</span> <span class=\"hljs-function_or_atom\">str3</span> ]     <span class=\"hljs-arrow\">-&gt;</span> <span class=\"hljs-number\">1</span>\r\n[ -<span class=\"hljs-function_or_atom\">z</span> <span class=\"hljs-function_or_atom\">str1</span> ]     <span class=\"hljs-arrow\">-&gt;</span> <span class=\"hljs-number\">1</span>\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>[ \"$str1\" = \"$str2\" ]</code></td>\r\n  <td>checks if string are equal</td>\r\n</tr>\r\n<tr>\r\n  <td><code>[ \"$str1\" != \"$str2\" ]</code></td>\r\n  <td>checks if string are not equal</td>\r\n</tr>\r\n<tr>\r\n  <td><code>[ -n \"$str1\"</code></td>\r\n  <td>checks if string length is greater than zero</td>\r\n</tr>\r\n<tr>\r\n  <td><code>[ -z \"$str1\" ]</code></td>\r\n  <td>checks if string length is zero</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-34-run-checks-on-stringthe-and-logical-operator\"><strong>Shell Scripting Tutorial-34:</strong> <em>Run Checks on StringThe ‘AND’ Logical Operator</em></h2>\r\n\r\n<p><strong>-a</strong> is the ‘AND’ operator for shell scripting. <br>\r\nFollowing if statement checks the variable if it is between 50 and 100. <br>\r\n<code>if [ $num -le 100 -a $num -ge 50 ]</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># 1. script ask users to enter a number between 50-100</span>\r\n<span class=\"hljs-comment\"># 2. store input</span>\r\n<span class=\"hljs-comment\"># 3. check the input between 50-100</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter a number between 50 and 100:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> num\r\n\r\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$num</span> -le <span class=\"hljs-number\">100</span> <span class=\"hljs-operator\">-a</span> <span class=\"hljs-variable\">$num</span> -ge <span class=\"hljs-number\">50</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"The number is between 50 and 100.\"</span>\r\n<span class=\"hljs-keyword\">else</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"The number is not between 50 and 100.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs applescript\">Enter a <span class=\"hljs-type\">number</span> <span class=\"hljs-keyword\">between</span> <span class=\"hljs-number\">50</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">100</span>:<span class=\"hljs-number\">54</span>\r\nThe <span class=\"hljs-type\">number</span> <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">between</span> <span class=\"hljs-number\">50</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">100.</span>\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>if [ $num -le 100 -a $num -ge 50 ]</code></td>\r\n  <td>usage of AND operator</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-35-count-the-number-of-characters-in-users-input-in-your-script\"><strong>Shell Scripting Tutorial-35:</strong> <em>Count the Number of Characters in User’s Input in Your Script</em></h2>\r\n\r\n<p>checking the number of the character of the variable. <br>\r\n<code>if [ 'echo $var | wc -c' -eq 2 ]</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># 1. script ask users to enter a character</span>\r\n<span class=\"hljs-comment\"># 2. check if one character is entered or not</span>\r\n<span class=\"hljs-comment\"># 3. if not print invalid input</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter  a character:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> var\r\n\r\n<span class=\"hljs-keyword\">if</span> [ `<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$var</span> | wc -c` <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">2</span> ] <span class=\"hljs-comment\"># check if there is one character or not. 2 because of enter character.</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You entered a character.\"</span>\r\n<span class=\"hljs-keyword\">else</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Invalid input.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">Enter  <span class=\"hljs-operator\">a</span> <span class=\"hljs-keyword\">character</span>:d\r\nYou entered <span class=\"hljs-operator\">a</span> <span class=\"hljs-keyword\">character</span>.</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td>`if [ ‘echo $var</td>\r\n  <td>wc -c’ -eq 2 ]`</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-36-the-or-logical-operator\"><strong>Shell Scripting Tutorial-36:</strong> <em>The ‘OR’ Logical Operator</em></h2>\r\n\r\n<p><strong>-0</strong> is the ‘OR’ operator for shell scripting. <br>\r\nFollowing if statement checks the variable if it is vowel or not. <br>\r\n<code>if [ $var  = a -o $var  = e -o $var  = i -o $var  = u -o $var  = o ]</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># 1. script ask users to enter a character</span>\r\n<span class=\"hljs-comment\"># 2. check if one character is entered or more than character</span>\r\n<span class=\"hljs-comment\"># 3. if one character is input, check if it is vowel or not</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter a lowercase character:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> var\r\n\r\n<span class=\"hljs-keyword\">if</span> [ `<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$var</span> | wc -c` <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">2</span> ] <span class=\"hljs-comment\"># check if there is one character or not. 2 because of enter character.</span>\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$var</span>  = a -o <span class=\"hljs-variable\">$var</span>  = e -o <span class=\"hljs-variable\">$var</span>  = i -o <span class=\"hljs-variable\">$var</span>  = u -o <span class=\"hljs-variable\">$var</span>  = o ]\r\n    <span class=\"hljs-keyword\">then</span>\r\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You entered a vowel.\"</span>\r\n    <span class=\"hljs-keyword\">else</span>\r\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You did not enter a vowel.\"</span>\r\n    <span class=\"hljs-keyword\">fi</span>\r\n<span class=\"hljs-keyword\">else</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Invalid input.\"</span>\r\n<span class=\"hljs-keyword\">fi</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">Enter <span class=\"hljs-operator\">a</span> lowercase <span class=\"hljs-keyword\">character</span>:m\r\nYou did <span class=\"hljs-operator\">not</span> enter <span class=\"hljs-operator\">a</span> vowel.\r\n\r\nEnter <span class=\"hljs-operator\">a</span> lowercase <span class=\"hljs-keyword\">character</span>:<span class=\"hljs-operator\">a</span>\r\nYou entered <span class=\"hljs-operator\">a</span> vowel.</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>if [ $var  = a -o $var  = e -o $var  = i -o $var  = u -o $var  = o ]</code></td>\r\n  <td>usage of OR operator</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<p>##<strong>Shell Scripting Tutorial-37:</strong> <em>The ‘case’ Statement</em> ##</p>\r\n\r\n<p>The case statement is the fourth version of the condition statements. <br>\r\n1. if <br>\r\n2. if else <br>\r\n3. elif <br>\r\n4. case</p>\r\n\r\n<p>usage of case statement: <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># 1. script ask users to enter a character</span>\r\n<span class=\"hljs-comment\"># 2. check whether the character is lowercase or uppercase or digit or special character</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter a character:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> var\r\n\r\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-variable\">$var</span> <span class=\"hljs-keyword\">in</span>\r\n[a-z])\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You entered a lowercase character.\"</span>\r\n    ;;\r\n[A-Z])\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You entered an uppercase character.\"</span>\r\n    ;;\r\n[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>])\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You entered a digit.\"</span>\r\n    ;;\r\n?)\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You entered a special character.\"</span>\r\n    ;;\r\n*)\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"You entered more than one character.\"</span>\r\n    ;;\r\n<span class=\"hljs-keyword\">esac</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">Enter <span class=\"hljs-operator\">a</span> <span class=\"hljs-keyword\">character</span>:d\r\nYou entered <span class=\"hljs-operator\">a</span> lowercase <span class=\"hljs-keyword\">character</span>.\r\n\r\nEnter <span class=\"hljs-operator\">a</span> <span class=\"hljs-keyword\">character</span>:D\r\nYou entered <span class=\"hljs-operator\">an</span> uppercase <span class=\"hljs-keyword\">character</span>.\r\n\r\nEnter <span class=\"hljs-operator\">a</span> <span class=\"hljs-keyword\">character</span>:ad\r\nYou entered more than <span class=\"hljs-constant\">one</span> <span class=\"hljs-keyword\">character</span>.\r\n\r\nEnter <span class=\"hljs-operator\">a</span> <span class=\"hljs-keyword\">character</span>:<span class=\"hljs-number\">4</span>\r\nYou entered <span class=\"hljs-operator\">a</span> digit.</code></pre>\r\n\r\n<h2 id=\"shell-scripting-tutorial-38-another-date-with-case-statement\"><strong>Shell Scripting Tutorial-38:</strong> <em>Another Date with ‘case’ Statement</em></h2>\r\n\r\n<p>Another example of case statement. <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># 1. script ask users to enter a word</span>\r\n<span class=\"hljs-comment\"># 2. 1 check if word starts a vowel character or not</span>\r\n<span class=\"hljs-comment\"># 3. 2 check if the word starts with a digit</span>\r\n<span class=\"hljs-comment\"># 4. 3 check if the word ends with a digit</span>\r\n<span class=\"hljs-comment\"># 5. 4 check if the word s 3-letter word</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter a word:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> word\r\n\r\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-variable\">$word</span> <span class=\"hljs-keyword\">in</span>\r\n[aeiou]* | [AEIOU]*)\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"The words begins with a vowel.\"</span>\r\n    ;;\r\n[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>]*)\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"The words begins with a digit.\"</span>\r\n    ;;\r\n*[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>])\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"The words ends with a digit.\"</span>\r\n    ;;\r\n???)\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"The words is a 3-letter word.\"</span>\r\n    ;;\r\n*)\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Something else.\"</span>\r\n    ;;\r\n<span class=\"hljs-keyword\">esac</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">Enter <span class=\"hljs-operator\">a</span> <span class=\"hljs-built_in\">word</span>:mustafa\r\nSomething <span class=\"hljs-keyword\">else</span>.\r\n\r\nEnter <span class=\"hljs-operator\">a</span> <span class=\"hljs-built_in\">word</span>:<span class=\"hljs-number\">234</span>\r\nThe <span class=\"hljs-keyword\">words</span> <span class=\"hljs-operator\">begins</span> <span class=\"hljs-operator\">with</span> <span class=\"hljs-operator\">a</span> digit.\r\n\r\nEnter <span class=\"hljs-operator\">a</span> <span class=\"hljs-built_in\">word</span>:msd \r\nThe <span class=\"hljs-keyword\">words</span> is <span class=\"hljs-operator\">a</span> <span class=\"hljs-number\">3</span>-letter <span class=\"hljs-built_in\">word</span>.\r\n\r\nEnter <span class=\"hljs-operator\">a</span> <span class=\"hljs-built_in\">word</span>:asasdf3\r\nThe <span class=\"hljs-keyword\">words</span> <span class=\"hljs-operator\">begins</span> <span class=\"hljs-operator\">with</span> <span class=\"hljs-operator\">a</span> vowel.\r\n\r\nEnter <span class=\"hljs-operator\">a</span> <span class=\"hljs-built_in\">word</span>:dfds3\r\nThe <span class=\"hljs-keyword\">words</span> <span class=\"hljs-operator\">ends</span> <span class=\"hljs-operator\">with</span> <span class=\"hljs-operator\">a</span> digit.\r\n</code></pre>\r\n\r\n<h2 id=\"shell-scripting-tutorial-39-the-while-loop\"><strong>Shell Scripting Tutorial-39:</strong> <em>The ‘while’ Loop</em></h2>\r\n\r\n<p>usage of ‘while’ loop. <br>\r\ndisplay the number 1 to 10. <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># while loop in action</span>\r\n\r\n<span class=\"hljs-comment\"># 1. display number 1 to 10.</span>\r\n\r\ncount=<span class=\"hljs-number\">1</span>\r\n<span class=\"hljs-keyword\">while</span> [ <span class=\"hljs-variable\">$count</span> -le <span class=\"hljs-number\">10</span> ]\r\n<span class=\"hljs-keyword\">do</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$count</span>\r\n    count=`expr <span class=\"hljs-variable\">$count</span> + <span class=\"hljs-number\">1</span>`\r\n<span class=\"hljs-keyword\">done</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \">1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>while [ $count -le 10 ]</code></td>\r\n  <td>usage of while loop</td>\r\n</tr>\r\n<tr>\r\n  <td><code>do</code></td>\r\n  <td></td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo $count</code></td>\r\n  <td></td>\r\n</tr>\r\n<tr>\r\n  <td><code>done</code></td>\r\n  <td></td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-40-the-until-loop\"><strong>Shell Scripting Tutorial-40:</strong> <em>The ‘until’ Loop</em></h2>\r\n\r\n<p>usage of until loop. <br>\r\ndisplay the numbers 1 to 9. <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># until loop in action</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># 1. display number 1 to 9.</span>\r\n\r\ncount=<span class=\"hljs-number\">1</span>\r\nuntil [ <span class=\"hljs-variable\">$count</span> -ge <span class=\"hljs-number\">10</span> ]\r\n<span class=\"hljs-keyword\">do</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$count</span>\"</span>\r\n    count=`expr <span class=\"hljs-variable\">$count</span> + <span class=\"hljs-number\">1</span>`\r\n<span class=\"hljs-keyword\">done</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \">1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>until [ $count -gt 10 ]</code></td>\r\n  <td>usage of until loop</td>\r\n</tr>\r\n<tr>\r\n  <td><code>do</code></td>\r\n  <td></td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo $count</code></td>\r\n  <td></td>\r\n</tr>\r\n<tr>\r\n  <td><code>done</code></td>\r\n  <td></td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-41-the-for-loop\"><strong>Shell Scripting Tutorial-41:</strong> <em>The ‘for’ Loop</em></h2>\r\n\r\n<p>usage of for loop. <br>\r\nfor loop is pretty different than until and while loop. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. display folders in the directory not the files</span>\r\n\r\n<span class=\"hljs-comment\"># list the directories</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\ndirectories: \"</span>\r\n<span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> * <span class=\"hljs-comment\"># asterics means all the items in the current directory</span>\r\n<span class=\"hljs-keyword\">do</span>\r\n    <span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-operator\">-d</span> <span class=\"hljs-variable\">$item</span> ]\r\n    <span class=\"hljs-keyword\">then</span>\r\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$item</span>\"</span>\r\n    <span class=\"hljs-keyword\">fi</span>\r\n<span class=\"hljs-keyword\">done</span>\r\n\r\n<span class=\"hljs-comment\"># list the files</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\nfiles:\"</span>\r\n<span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> * <span class=\"hljs-comment\"># asterics means all the items in the current directory</span>\r\n<span class=\"hljs-keyword\">do</span>\r\n    <span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-operator\">-f</span> <span class=\"hljs-variable\">$item</span> ]\r\n    <span class=\"hljs-keyword\">then</span>\r\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$item</span>\"</span>\r\n    <span class=\"hljs-keyword\">fi</span>\r\n<span class=\"hljs-keyword\">done</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs avrasm\"><span class=\"hljs-label\">directories:</span> \r\nfolder1\r\nfolder2\r\nfolder3\r\nsandbox\r\n\r\n<span class=\"hljs-label\">files:</span>\r\nanimals\r\ncommandlist_tutorial_50\r\ncreate_consecutive_files<span class=\"hljs-preprocessor\">.sh</span>\r\nempty_file1\r\nempty_file2\r\nempty_file3\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>for item in *</code></td>\r\n  <td>usage of for loop. * means all items in current directory</td>\r\n</tr>\r\n<tr>\r\n  <td><code>do</code></td>\r\n  <td></td>\r\n</tr>\r\n<tr>\r\n  <td><code>...</code></td>\r\n  <td></td>\r\n</tr>\r\n<tr>\r\n  <td><code>done</code></td>\r\n  <td></td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-42-rant-little-work\"><strong>Shell Scripting Tutorial-42:</strong> <em>Rant &amp; Little Work</em></h2>\r\n\r\n<p>comparison of real number.  </p>\r\n\r\n<p>another comparison for floating point numbers. <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. comparison of the real numbers</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"following method is for integers and not working for real numbers: \"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"a=4.5\r\nb=4.5\r\n[ a -eq b ]\r\necho ?\r\n\"</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"change real numbers to string to compare\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"a=4.5\r\nb=4.5\r\n[ \"</span>a<span class=\"hljs-string\">\" = \"</span>b<span class=\"hljs-string\">\" ]\r\necho ?\r\n\"</span>\r\n\r\na=<span class=\"hljs-number\">4.5</span>\r\nb=<span class=\"hljs-number\">4.5</span>\r\n[ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$a</span>\"</span> = <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$b</span>\"</span> ]\r\n<span class=\"hljs-built_in\">echo</span> $?\r\n\r\n<span class=\"hljs-comment\"># another comparison example</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\nanother comparison example:\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"min=12.45\r\nval=10.35\r\n\r\nif [ 1 -eq (echo {val} &lt; {min}| bc) ]\r\nthen\r\n    min={val}\r\nfi\r\n\r\necho min\"</span>\r\n\r\nmin=<span class=\"hljs-number\">12.45</span>\r\nval=<span class=\"hljs-number\">10.35</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-number\">1</span> <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$(echo \"${val} &lt; ${min}\" | bc)</span>\"</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    min=<span class=\"hljs-variable\">${val}</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$min</span>\"</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs oxygene\">following <span class=\"hljs-function\"><span class=\"hljs-keyword\">method</span> <span class=\"hljs-title\">is</span> <span class=\"hljs-title\">for</span> <span class=\"hljs-title\">integers</span> <span class=\"hljs-title\">and</span> <span class=\"hljs-title\">not</span> <span class=\"hljs-title\">working</span> <span class=\"hljs-title\">for</span> <span class=\"hljs-title\">real</span> <span class=\"hljs-title\">numbers</span>:</span> \r\na=<span class=\"hljs-number\">4.5</span>\r\nb=<span class=\"hljs-number\">4.5</span>\r\n[ a -eq b ]\r\necho ?\r\n\r\nchange real numbers <span class=\"hljs-keyword\">to</span> string <span class=\"hljs-keyword\">to</span> compare\r\na=<span class=\"hljs-number\">4.5</span>\r\nb=<span class=\"hljs-number\">4.5</span>\r\n[ a = b ]\r\necho ?\r\n\r\n<span class=\"hljs-number\">0</span>\r\n\r\nanother comparison example:\r\nmin=<span class=\"hljs-number\">12.45</span>\r\nval=<span class=\"hljs-number\">10.35</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-number\">1</span> -eq (echo <span class=\"hljs-comment\">{val}</span> &lt; <span class=\"hljs-comment\">{min}</span>| bc) ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    min=<span class=\"hljs-comment\">{val}</span>\r\nfi\r\n\r\necho min\r\n<span class=\"hljs-number\">10.35</span>\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>[ $a -eq $b ]</code></td>\r\n  <td>this is for integers and not working for real numbers</td>\r\n</tr>\r\n<tr>\r\n  <td><code>[ \"$a\" = \"$b\" ]</code></td>\r\n  <td>this converts number to string and compares them</td>\r\n</tr>\r\n<tr>\r\n  <td><code>min=12.45</code></td>\r\n  <td>another comparison example for floating point numbers</td>\r\n</tr>\r\n<tr>\r\n  <td><code>val=10.35</code></td>\r\n  <td></td>\r\n</tr>\r\n<tr>\r\n  <td>`if [ 1 -eq “<script type=\"math/tex\" id=\"MathJax-Element-29\">(echo “</script>{val} &lt; ${min}”</td>\r\n  <td>bc)” ]`</td>\r\n</tr>\r\n<tr>\r\n  <td><code>then</code></td>\r\n  <td></td>\r\n</tr>\r\n<tr>\r\n  <td><code>min=${val}</code></td>\r\n  <td></td>\r\n</tr>\r\n<tr>\r\n  <td><code>fi</code></td>\r\n  <td></td>\r\n</tr>\r\n<tr>\r\n  <td><code>echo \"$min\"</code></td>\r\n  <td></td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-43-search-patterns-using-grep\"><strong>Shell Scripting Tutorial-43:</strong> <em>Search Patterns Using ‘grep’</em></h2>\r\n\r\n<p>Usage of ‘grep’ command. <br>\r\n<strong>grep</strong> is same as using <strong>ctrl+f</strong> option in a file.  </p>\r\n\r\n<p><strong>grep -i</strong>: ignores case sensitivity <br>\r\n<strong>grep -n</strong>: shows line numbers for search results. <br>\r\n<strong>grep -c</strong>: shows the total number of the line that has money. <br>\r\n<strong>grep -v</strong>: shows the grep result for not matching lines. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. search text in file text_tutorial_43</span>\r\n\r\n<span class=\"hljs-comment\"># run the following command before the script:</span>\r\n<span class=\"hljs-comment\"># create a file name text_tutorial_43 with text contains money word.</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Search money in the file with case sensitivity:\"</span>\r\ngrep money text_tutorial_43\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\nSearch money in the file without case sensitivity:\"</span>\r\ngrep -i money text_tutorial_43\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\nSearch money in the file with case sensitivity and line numbers:\"</span>\r\ngrep -i -n money text_tutorial_43\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\nSearch money in the file with case sensitivity, line numbers and shows count:\"</span>\r\ngrep -i -n -c money text_tutorial_43\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\nSearch money in the file with case sensitivity, line numbers and shows count of money does not exist:\"</span>\r\ngrep -i -n -c -v money text_tutorial_43</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs applescript\">Search money <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">the</span> <span class=\"hljs-type\">file</span> <span class=\"hljs-keyword\">with</span> case sensitivity:\r\n\r\nSearch money <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">the</span> <span class=\"hljs-type\">file</span> <span class=\"hljs-keyword\">without</span> case sensitivity:\r\nMoney, <span class=\"hljs-keyword\">get</span> away\r\nMoney, <span class=\"hljs-keyword\">it</span>'s a gas\r\nMoney, <span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">back</span>\r\nMoney, <span class=\"hljs-keyword\">it</span>'s a hit \r\nMoney, <span class=\"hljs-keyword\">it</span>'s a crime \r\nMoney, so they <span class=\"hljs-command\">say</span> \r\n\r\nSearch money <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">the</span> <span class=\"hljs-type\">file</span> <span class=\"hljs-keyword\">with</span> case sensitivity <span class=\"hljs-keyword\">and</span> line numbers:\r\n<span class=\"hljs-number\">1</span>:Money, <span class=\"hljs-keyword\">get</span> away\r\n<span class=\"hljs-number\">3</span>:Money, <span class=\"hljs-keyword\">it</span>'s a gas\r\n<span class=\"hljs-number\">8</span>:Money, <span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">back</span>\r\n<span class=\"hljs-number\">10</span>:Money, <span class=\"hljs-keyword\">it</span>'s a hit \r\n<span class=\"hljs-number\">15</span>:Money, <span class=\"hljs-keyword\">it</span>'s a crime \r\n<span class=\"hljs-number\">17</span>:Money, so they <span class=\"hljs-command\">say</span> \r\n\r\nSearch money <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">the</span> <span class=\"hljs-type\">file</span> <span class=\"hljs-keyword\">with</span> case sensitivity, line numbers <span class=\"hljs-keyword\">and</span> shows <span class=\"hljs-command\">count</span>:\r\n<span class=\"hljs-number\">6</span>\r\n\r\nSearch money <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">the</span> <span class=\"hljs-type\">file</span> <span class=\"hljs-keyword\">with</span> case sensitivity, line numbers <span class=\"hljs-keyword\">and</span> shows <span class=\"hljs-command\">count</span> <span class=\"hljs-keyword\">of</span> money <span class=\"hljs-keyword\">does</span> <span class=\"hljs-keyword\">not</span> exist:\r\n<span class=\"hljs-number\">16</span></code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>grep money text_file</code></td>\r\n  <td>search “money” in text_file</td>\r\n</tr>\r\n<tr>\r\n  <td><code>grep -i money text_file</code></td>\r\n  <td>search “money” in text_file by ignoring case sensitivity.</td>\r\n</tr>\r\n<tr>\r\n  <td><code>grep -i -n money text_file</code></td>\r\n  <td>search “money” in text_file by ignoring case sensitivity, and shows line numbers</td>\r\n</tr>\r\n<tr>\r\n  <td><code>grep -i -c money text_file</code></td>\r\n  <td>search “money” in text_file by ignoring case sensitivity, and shows count of money line</td>\r\n</tr>\r\n<tr>\r\n  <td><code>grep -i -v money text_file</code></td>\r\n  <td>search “money” in text_file by ignoring case sensitivity, and shows the lines that has no money</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-44-the-passwd-file-explained\"><strong>Shell Scripting Tutorial-44:</strong> <em>The ‘passwd’ File Explained</em></h2>\r\n\r\n<p>Usage of file “passwd”.  </p>\r\n\r\n<p><code>cat /etc/passwd</code> command shows the content of passwd file. <br>\r\n<strong>joker:x:1000:1000:joker,,,:/home/joker:/bin/bash</strong>  </p>\r\n\r\n<p>filed 1 -&gt; <strong>joker</strong>: user name <br>\r\nfield 2 -&gt; <strong>x</strong>: password is encrypted for the user <br>\r\nfield 3 -&gt; <strong>1000</strong>: uid (userid). from 1 to 99 id are reserved for predefined accounts <br>\r\nfield 4 -&gt; <strong>1000</strong>: group id. <br>\r\nfield 5 -&gt; <strong>joker,,,</strong>: the name of the computer <br>\r\nfield 6 -&gt; <strong>/home/joker</strong>: home folder <br>\r\nfield 7 -&gt; <strong>/bin/bash</strong>: shell  <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs asciidoc\">#!/usr/bin/env bash\r\n\r\ncat /etc/passwd\r\n\r\necho \"\\n\\nfiled 1 -&gt; *<span class=\"hljs-strong\">*joker*</span><span class=\"hljs-strong\">*: user name\r\nfield 2 -&gt; *</span><span class=\"hljs-strong\">*x*</span><span class=\"hljs-strong\">*: password is encrypted for the user\r\nfield 3 -&gt; *</span><span class=\"hljs-strong\">*1000*</span><span class=\"hljs-strong\">*: uid (userid). from 1 to 99 id are reserved for predefined accounts\r\nfield 4 -&gt; *</span><span class=\"hljs-strong\">*1000*</span><span class=\"hljs-strong\">*: group id.\r\nfield 5 -&gt; *</span><span class=\"hljs-strong\">*joker,,,*</span><span class=\"hljs-strong\">*: the name of the computer\r\nfield 6 -&gt; *</span><span class=\"hljs-strong\">*/home/joker*</span><span class=\"hljs-strong\">*: home folder\r\nfield 7 -&gt; *</span><span class=\"hljs-strong\">*/bin/bash*</span><span class=\"hljs-strong\">*: shell \"</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs ruby\"><span class=\"hljs-symbol\">root:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">0</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">0</span><span class=\"hljs-symbol\">:root</span><span class=\"hljs-symbol\">:/root</span><span class=\"hljs-symbol\">:/bin/bash</span>\r\n<span class=\"hljs-symbol\">daemon:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">1</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">1</span><span class=\"hljs-symbol\">:daemon</span><span class=\"hljs-symbol\">:/usr/sbin</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">bin:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">2</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">2</span><span class=\"hljs-symbol\">:bin</span><span class=\"hljs-symbol\">:/bin</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">sys:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">3</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">3</span><span class=\"hljs-symbol\">:sys</span><span class=\"hljs-symbol\">:/dev</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">sync:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">4</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">65534</span><span class=\"hljs-symbol\">:sync</span><span class=\"hljs-symbol\">:/bin</span><span class=\"hljs-symbol\">:/bin/sync</span>\r\n<span class=\"hljs-symbol\">games:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">5</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">60</span><span class=\"hljs-symbol\">:games</span><span class=\"hljs-symbol\">:/usr/games</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">man:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">6</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">12</span><span class=\"hljs-symbol\">:man</span><span class=\"hljs-symbol\">:/var/cache/man</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">lp:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">7</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">7</span><span class=\"hljs-symbol\">:lp</span><span class=\"hljs-symbol\">:/var/spool/lpd</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">mail:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">8</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">8</span><span class=\"hljs-symbol\">:mail</span><span class=\"hljs-symbol\">:/var/mail</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">news:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">9</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">9</span><span class=\"hljs-symbol\">:news</span><span class=\"hljs-symbol\">:/var/spool/news</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">uucp:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">10</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">10</span><span class=\"hljs-symbol\">:uucp</span><span class=\"hljs-symbol\">:/var/spool/uucp</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">proxy:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">13</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">13</span><span class=\"hljs-symbol\">:proxy</span><span class=\"hljs-symbol\">:/bin</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\nwww-<span class=\"hljs-symbol\">data:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">33</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">33</span><span class=\"hljs-symbol\">:www-data</span><span class=\"hljs-symbol\">:/var/www</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">backup:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">34</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">34</span><span class=\"hljs-symbol\">:backup</span><span class=\"hljs-symbol\">:/var/backups</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">list:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">38</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">38</span><span class=\"hljs-symbol\">:Mailing</span> <span class=\"hljs-constant\">List</span> <span class=\"hljs-constant\">Manager</span><span class=\"hljs-symbol\">:/var/list</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">irc:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">39</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">39</span><span class=\"hljs-symbol\">:ircd</span><span class=\"hljs-symbol\">:/var/run/ircd</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">gnats:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">41</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">41</span><span class=\"hljs-symbol\">:Gnats</span> <span class=\"hljs-constant\">Bug</span>-<span class=\"hljs-constant\">Reporting</span> <span class=\"hljs-constant\">System</span> (admin)<span class=\"hljs-symbol\">:/var/lib/gnats</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">nobody:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">65534</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">65534</span><span class=\"hljs-symbol\">:nobody</span><span class=\"hljs-symbol\">:/nonexistent</span><span class=\"hljs-symbol\">:/usr/sbin/nologin</span>\r\n<span class=\"hljs-symbol\">libuuid:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">100</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">101</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:/var/lib/libuuid</span><span class=\"hljs-symbol\">:</span>\r\n<span class=\"hljs-symbol\">syslog:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">101</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">104</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:/home/syslog</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">messagebus:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">102</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">106</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:/var/run/dbus</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">usbmux:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">103</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">46</span><span class=\"hljs-symbol\">:usbmux</span> daemon,,,<span class=\"hljs-symbol\">:/home/usbmux</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">dnsmasq:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">104</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">65534</span><span class=\"hljs-symbol\">:dnsmasq</span>,,,<span class=\"hljs-symbol\">:/var/lib/misc</span><span class=\"hljs-symbol\">:/bin/false</span>\r\navahi-<span class=\"hljs-symbol\">autoipd:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">105</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">114</span><span class=\"hljs-symbol\">:Avahi</span> autoip daemon,,,<span class=\"hljs-symbol\">:/var/lib/avahi-autoipd</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">kernoops:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">106</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">65534</span><span class=\"hljs-symbol\">:Kernel</span> <span class=\"hljs-constant\">Oops</span> <span class=\"hljs-constant\">Tracking</span> <span class=\"hljs-constant\">Daemon</span>,,,<span class=\"hljs-symbol\">:/</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">avahi:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">107</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">116</span><span class=\"hljs-symbol\">:Avahi</span> mDNS daemon,,,<span class=\"hljs-symbol\">:/var/run/avahi-daemon</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">colord:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">108</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">118</span><span class=\"hljs-symbol\">:colord</span> colour management daemon,,,<span class=\"hljs-symbol\">:/var/lib/colord</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">hplip:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">109</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">7</span><span class=\"hljs-symbol\">:HPLIP</span> system user,,,<span class=\"hljs-symbol\">:/var/run/hplip</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">pulse:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">110</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">119</span><span class=\"hljs-symbol\">:PulseAudio</span> daemon,,,<span class=\"hljs-symbol\">:/var/run/pulse</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">mdm:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">111</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">121</span><span class=\"hljs-symbol\">:MDM</span> <span class=\"hljs-constant\">Display</span> <span class=\"hljs-constant\">Manager</span><span class=\"hljs-symbol\">:/var/lib/mdm</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">rtkit:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">112</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">123</span><span class=\"hljs-symbol\">:RealtimeKit</span>,,,<span class=\"hljs-symbol\">:/proc</span><span class=\"hljs-symbol\">:/bin/false</span>\r\n<span class=\"hljs-symbol\">saned:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">113</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">124</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:/home/saned</span><span class=\"hljs-symbol\">:/bin/false</span>\r\nspeech-<span class=\"hljs-symbol\">dispatcher:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">114</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">29</span><span class=\"hljs-symbol\">:Speech</span> <span class=\"hljs-constant\">Dispatcher</span>,,,<span class=\"hljs-symbol\">:/var/run/speech-dispatcher</span><span class=\"hljs-symbol\">:/bin/sh</span>\r\n<span class=\"hljs-symbol\">joker:</span><span class=\"hljs-symbol\">x:</span><span class=\"hljs-number\">1000</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">1000</span><span class=\"hljs-symbol\">:joker</span>,,,<span class=\"hljs-symbol\">:/home/joker</span><span class=\"hljs-symbol\">:/bin/bash</span>\r\n\r\n\r\nfiled <span class=\"hljs-number\">1</span> -&gt; **joker**<span class=\"hljs-symbol\">:</span> user name\r\nfield <span class=\"hljs-number\">2</span> -&gt; **x**<span class=\"hljs-symbol\">:</span> password is encrypted <span class=\"hljs-keyword\">for</span> the user\r\nfield <span class=\"hljs-number\">3</span> -&gt; **<span class=\"hljs-number\">1000</span>**<span class=\"hljs-symbol\">:</span> uid (userid). from <span class=\"hljs-number\">1</span> to <span class=\"hljs-number\">99</span> id are reserved <span class=\"hljs-keyword\">for</span> predefined accounts\r\nfield <span class=\"hljs-number\">4</span> -&gt; **<span class=\"hljs-number\">1000</span>**<span class=\"hljs-symbol\">:</span> group id.\r\nfield <span class=\"hljs-number\">5</span> -&gt; **joker,,,**<span class=\"hljs-symbol\">:</span> the name of the computer\r\nfield <span class=\"hljs-number\">6</span> -&gt; **<span class=\"hljs-regexp\">/home/joker</span>**<span class=\"hljs-symbol\">:</span> home folder\r\nfield <span class=\"hljs-number\">7</span> -&gt; **<span class=\"hljs-regexp\">/bin/bash</span>**<span class=\"hljs-symbol\">:</span> shell </code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>cat /etc/passwd</code></td>\r\n  <td>shows info about the accounts of the computer</td>\r\n</tr>\r\n<tr>\r\n  <td><code>joker:x:1000:1000:joker,,,:/home/joker:/bin/bash</code></td>\r\n  <td>output of the file</td>\r\n</tr>\r\n<tr>\r\n  <td><code>joker</code></td>\r\n  <td>field 1: username</td>\r\n</tr>\r\n<tr>\r\n  <td><code>x</code></td>\r\n  <td>field 2: password</td>\r\n</tr>\r\n<tr>\r\n  <td><code>1000</code></td>\r\n  <td>field 3: user id</td>\r\n</tr>\r\n<tr>\r\n  <td><code>1000</code></td>\r\n  <td>field 4: group id</td>\r\n</tr>\r\n<tr>\r\n  <td><code>joker,,,</code></td>\r\n  <td>field 5: name of the computer</td>\r\n</tr>\r\n<tr>\r\n  <td><code>/home/joker</code></td>\r\n  <td>field 6: home folder of the user</td>\r\n</tr>\r\n<tr>\r\n  <td><code>/bin/bash</code></td>\r\n  <td>field 7: shell</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-45-the-internal-field-separator\"><strong>Shell Scripting Tutorial-45:</strong> <em>The Internal Field Separator</em></h2>\r\n\r\n<p>Usage of IFS (internal field separator)   </p>\r\n\r\n<p><code>set this is the forty fifth tutorial.</code> sets the positional parameter  </p>\r\n\r\n<p>default IFS character is space. It can be changed as following: <br>\r\n<code>IFS=:</code> so, IFS is changed to : <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. change the value of the IFS and set will be changed.</span>\r\n\r\n<span class=\"hljs-comment\"># usage of default IFS</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"default IFS usage:\"</span>\r\nline=<span class=\"hljs-string\">\"Shell scripting is fun.\"</span>\r\n<span class=\"hljs-keyword\">set</span> <span class=\"hljs-variable\">$line</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$1</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$2</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$3</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$4</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\nIFS is changed to ':' and the result is:\"</span>\r\nIFS=: <span class=\"hljs-comment\"># IFS is changed to :</span>\r\n<span class=\"hljs-keyword\">set</span> <span class=\"hljs-variable\">$line</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$1</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$2</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$3</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$4</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\ntext is separated using column character and IFS is column:\"</span>\r\nline=<span class=\"hljs-string\">\"Shell:scripting:is:fun.\"</span>\r\n<span class=\"hljs-keyword\">set</span> <span class=\"hljs-variable\">$line</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$1</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$2</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$3</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$4</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs oxygene\"><span class=\"hljs-keyword\">default</span> IFS usage:\r\nShell\r\nscripting\r\n<span class=\"hljs-keyword\">is</span>\r\nfun.\r\n\r\nIFS <span class=\"hljs-keyword\">is</span> changed <span class=\"hljs-keyword\">to</span> <span class=\"hljs-string\">':'</span> <span class=\"hljs-keyword\">and</span> the <span class=\"hljs-keyword\">result</span> <span class=\"hljs-keyword\">is</span>:\r\nShell scripting <span class=\"hljs-keyword\">is</span> fun.\r\n\r\n\r\n\r\n\r\ntext <span class=\"hljs-keyword\">is</span> separated <span class=\"hljs-keyword\">using</span> column character <span class=\"hljs-keyword\">and</span> IFS <span class=\"hljs-keyword\">is</span> column:\r\nShell\r\nscripting\r\n<span class=\"hljs-keyword\">is</span>\r\nfun.\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>IFS=:</code></td>\r\n  <td>Internal file separator is changed</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-46-passwd-file-revisited\"><strong>Shell Scripting Tutorial-46:</strong> <em>‘passwd’ File Revisited</em></h2>\r\n\r\n<p>Example of using passwd file, IFS, grep and set command. <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. shows some information from passwd file to users.</span>\r\n<span class=\"hljs-comment\"># 2. IFS is used.</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter Username:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> logname\r\n\r\n<span class=\"hljs-comment\"># takes the line that is associated with the username</span>\r\nline=`grep <span class=\"hljs-variable\">$logname</span> /etc/passwd`\r\n\r\nIFS=: <span class=\"hljs-comment\"># the separator is : in passwd file</span>\r\n<span class=\"hljs-keyword\">set</span> <span class=\"hljs-variable\">$line</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Username:<span class=\"hljs-variable\">$1</span>\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"User ID: <span class=\"hljs-variable\">$3</span>\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Group ID: <span class=\"hljs-variable\">$4</span>\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Comment Field: <span class=\"hljs-variable\">$5</span>\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Home Folder: <span class=\"hljs-variable\">$6</span>\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Default shell: <span class=\"hljs-variable\">$7</span>\"</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs autohotkey\"><span class=\"hljs-label\">Enter Username:</span>joker\r\n<span class=\"hljs-label\">Username:</span>joker\r\n<span class=\"hljs-label\">User ID:</span> <span class=\"hljs-number\">1000</span>\r\n<span class=\"hljs-label\">Group ID:</span> <span class=\"hljs-number\">1000</span>\r\n<span class=\"hljs-label\">Comment Field:</span> joker,,,\r\n<span class=\"hljs-label\">Home Folder:</span> /home/joker\r\n<span class=\"hljs-label\">Default shell:</span> /bin/bash</code></pre>\r\n\r\n<h2 id=\"shell-scripting-tutorial-47-reading-from-a-file\"><strong>Shell Scripting Tutorial-47:</strong> <em>Reading From a File</em></h2>\r\n\r\n<p>First, file should load to <strong>exec</strong>, at the same time current settings should be kept. <br>\r\n<strong>terminal</strong> variable holds the current settings and it assigns back the settings after reading operation.  </p>\r\n\r\n<p><code>terminal='tty'</code> <br>\r\n<code>exec &lt; $fname</code>  </p>\r\n\r\n<p><code>while read line</code> <br>\r\n<code>do</code> <br>\r\n<code>echo \"$line\"</code> <br>\r\n<code>done</code>  </p>\r\n\r\n<p><code>exec &lt; $terminal</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. script shows the line numbers of the text with the text</span>\r\n\r\n<span class=\"hljs-comment\"># run the following command before the script:</span>\r\n<span class=\"hljs-comment\"># create text file name text_tutorial_47</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter a file name(text_tutorial_47):\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> fname\r\n\r\n<span class=\"hljs-keyword\">if</span> [ -z <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$name</span>\"</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"exit\"</span>\r\n<span class=\"hljs-keyword\">fi</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"\\ntty contains info about terminal setting.\"</span>\r\nterminal=`tty`\r\n\r\n<span class=\"hljs-keyword\">exec</span> &lt; <span class=\"hljs-variable\">$fname</span>\r\n\r\ncount=<span class=\"hljs-number\">1</span>\r\n<span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">read</span> line\r\n<span class=\"hljs-keyword\">do</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$count</span>.<span class=\"hljs-variable\">$line</span>\r\n    count=`expr <span class=\"hljs-variable\">$count</span> + <span class=\"hljs-number\">1</span>`\r\n<span class=\"hljs-keyword\">done</span>\r\n\r\n<span class=\"hljs-keyword\">exec</span> &lt; <span class=\"hljs-variable\">$terminal</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs applescript\">Enter a <span class=\"hljs-type\">file</span> <span class=\"hljs-property\">name</span>(text_tutorial_47):text_tutorial_47\r\n<span class=\"hljs-keyword\">exit</span>\r\n\r\ntty <span class=\"hljs-keyword\">contains</span> info <span class=\"hljs-keyword\">about</span> terminal setting.\r\n<span class=\"hljs-number\">1.</span>Money, <span class=\"hljs-keyword\">get</span> away\r\n<span class=\"hljs-number\">2.</span>Get a good job <span class=\"hljs-keyword\">with</span> more pay <span class=\"hljs-keyword\">and</span> you're okay\r\n<span class=\"hljs-number\">3.</span>Money, <span class=\"hljs-keyword\">it</span>'s a gas\r\n<span class=\"hljs-number\">4.</span>Grab <span class=\"hljs-keyword\">that</span> cash <span class=\"hljs-keyword\">with</span> both hands <span class=\"hljs-keyword\">and</span> make a stash\r\n<span class=\"hljs-number\">5.</span>New car, caviar, four star daydream\r\n<span class=\"hljs-number\">6.</span>Think I'll buy <span class=\"hljs-keyword\">me</span> a football team\r\n<span class=\"hljs-number\">7.</span>\r\n<span class=\"hljs-number\">8.</span>Money, <span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">back</span>\r\n<span class=\"hljs-number\">9.</span>I'm all right Jack keep your hands off <span class=\"hljs-keyword\">of</span> <span class=\"hljs-keyword\">my</span> stack\r\n<span class=\"hljs-number\">10.</span>Money, <span class=\"hljs-keyword\">it</span>'s a hit\r\n<span class=\"hljs-number\">11.</span>Don't give <span class=\"hljs-keyword\">me</span> <span class=\"hljs-keyword\">that</span> do goody good bullshit\r\n<span class=\"hljs-number\">12.</span>I'm <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">the</span> high-fidelity <span class=\"hljs-keyword\">first</span> <span class=\"hljs-type\">class</span> traveling <span class=\"hljs-keyword\">set</span>\r\n<span class=\"hljs-number\">13.</span>And I think I need a Lear jet\r\n<span class=\"hljs-number\">14.</span>\r\n<span class=\"hljs-number\">15.</span>Money, <span class=\"hljs-keyword\">it</span>'s a crime\r\n<span class=\"hljs-number\">16.</span>Share <span class=\"hljs-keyword\">it</span> fairly <span class=\"hljs-keyword\">but</span> don't take a slice <span class=\"hljs-keyword\">of</span> <span class=\"hljs-keyword\">my</span> pie\r\n<span class=\"hljs-number\">17.</span>Money, so they <span class=\"hljs-command\">say</span>\r\n<span class=\"hljs-number\">18.</span>Is <span class=\"hljs-keyword\">the</span> root <span class=\"hljs-keyword\">of</span> all evil today\r\n<span class=\"hljs-number\">19.</span>But <span class=\"hljs-keyword\">if</span> you ask <span class=\"hljs-keyword\">for</span> payrise <span class=\"hljs-keyword\">it</span>'s no surprise\r\n<span class=\"hljs-number\">20.</span>That they're giving none away\r\n<span class=\"hljs-number\">21.</span>Away, away, way\r\n<span class=\"hljs-number\">22.</span>Away, away, away\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>terminal='tty'</code></td>\r\n  <td>takes the current settings of the terminal</td>\r\n</tr>\r\n<tr>\r\n  <td><code>exec &lt; $fname</code></td>\r\n  <td>loads the file content</td>\r\n</tr>\r\n<tr>\r\n  <td><code>while read line</code></td>\r\n  <td>reads the line of the exec which is $fname in this case</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-48-sleep-while-you-are-at-work\"><strong>Shell Scripting Tutorial-48:</strong> <em>Sleep While You are at Work</em></h2>\r\n\r\n<p>Usage of <strong>sleep</strong> command. Sleep makes a time delay on the execution of shell. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. ask user to enter a sentence</span>\r\n<span class=\"hljs-comment\"># 2. display one word at a time and use time delay</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter a sentence:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> str\r\n<span class=\"hljs-keyword\">for</span> word <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$str</span>\r\n<span class=\"hljs-keyword\">do</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$word</span>\"</span>\r\n    sleep <span class=\"hljs-number\">2</span>\r\n<span class=\"hljs-keyword\">done</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs applescript\">Enter a sentence:shell <span class=\"hljs-keyword\">script</span> tutorial <span class=\"hljs-keyword\">is</span> cool :)\r\nshell\r\n<span class=\"hljs-keyword\">script</span>\r\ntutorial\r\n<span class=\"hljs-keyword\">is</span>\r\ncool\r\n:)</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>sleep 5</code></td>\r\n  <td>shell execution sleeps 5 seconds</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-49-count-the-number-of-words-sentences-in-a-text-file-without-using-wc\"><strong>Shell Scripting Tutorial-49:</strong> <em>Count the number of words &amp; sentences in a text file without using ‘wc’</em></h2>\r\n\r\n<p>An example is ran.  </p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. counts line number and word number</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># run the following command before the script:</span>\r\n<span class=\"hljs-comment\"># create text file name text_tutorial_49 with following content</span>\r\n<span class=\"hljs-comment\"># Money, get away</span>\r\n<span class=\"hljs-comment\"># Get a good job with more pay and you're okay </span>\r\n<span class=\"hljs-comment\"># Money, it's a gas</span>\r\n<span class=\"hljs-comment\"># Grab that cash with both hands and make a stash</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter a file name(text_tutorial_49):\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> fname \r\n\r\nterminal=`tty`\r\n\r\n<span class=\"hljs-keyword\">exec</span> &lt; <span class=\"hljs-variable\">$fname</span>\r\n\r\nnol=<span class=\"hljs-number\">0</span> <span class=\"hljs-comment\"># number of lines</span>\r\nnow=<span class=\"hljs-number\">0</span> <span class=\"hljs-comment\"># number of words</span>\r\n\r\n<span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">read</span> line\r\n<span class=\"hljs-keyword\">do</span>\r\n    nol=`expr <span class=\"hljs-variable\">$nol</span> + <span class=\"hljs-number\">1</span>`\r\n    <span class=\"hljs-keyword\">set</span> <span class=\"hljs-variable\">$line</span>\r\n    now=`expr <span class=\"hljs-variable\">$now</span> + <span class=\"hljs-variable\">$#</span>`\r\n    <span class=\"hljs-comment\"># for word in $line</span>\r\n    <span class=\"hljs-comment\"># do </span>\r\n    <span class=\"hljs-comment\">#   now=`expr $now + 1`</span>\r\n    <span class=\"hljs-comment\"># done</span>\r\n<span class=\"hljs-keyword\">done</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"number of lines: <span class=\"hljs-variable\">$nol</span>\"</span>\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"number of words: <span class=\"hljs-variable\">$now</span>\"</span>\r\n\r\n<span class=\"hljs-keyword\">exec</span> &lt; <span class=\"hljs-variable\">$terminal</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs livecodeserver\">Enter <span class=\"hljs-operator\">a</span> <span class=\"hljs-built_in\">file</span> name(text_tutorial_49):text_tutorial_49\r\n<span class=\"hljs-built_in\">number</span> <span class=\"hljs-operator\">of</span> <span class=\"hljs-keyword\">lines</span>: <span class=\"hljs-number\">3</span>\r\n<span class=\"hljs-built_in\">number</span> <span class=\"hljs-operator\">of</span> <span class=\"hljs-keyword\">words</span>: <span class=\"hljs-number\">17</span>\r\n</code></pre>\r\n\r\n<h2 id=\"shell-scripting-tutorial-50-fetch-redirect-man-pages-of-commands-using-for-loop\"><strong>Shell Scripting Tutorial-50:</strong> <em>Fetch &amp; Redirect Man Pages of commands using ‘for loop’</em></h2>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. use the command in the commandlist_tutorial_50</span>\r\n<span class=\"hljs-comment\"># 2. iterate the commands using for loop</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># run the following command before the script:</span>\r\n<span class=\"hljs-comment\"># create a file name commandlist_tutorial_50 with the following content:</span>\r\n<span class=\"hljs-comment\"># cat</span>\r\n<span class=\"hljs-comment\"># date</span>\r\n<span class=\"hljs-comment\"># cal</span>\r\n<span class=\"hljs-comment\"># touch</span>\r\n<span class=\"hljs-comment\"># run command and check the file \"helpfile\"</span>\r\n\r\n<span class=\"hljs-keyword\">for</span> cmd <span class=\"hljs-keyword\">in</span> `cat commandlist_tutorial_50`\r\n<span class=\"hljs-keyword\">do</span>\r\n    man <span class=\"hljs-variable\">$cmd</span> &gt;&gt; helpfile\r\n<span class=\"hljs-keyword\">done</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs oxygene\"># <span class=\"hljs-keyword\">take</span> a look <span class=\"hljs-keyword\">to</span> content <span class=\"hljs-keyword\">of</span> helpfile</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>man cat &gt;&gt; helpfile</code></td>\r\n  <td>appends output of man command to helpfile</td>\r\n</tr>\r\n<tr>\r\n  <td><code>for cmd in 'cat commandlist'</code></td>\r\n  <td>for loop iteration of a file</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-51-nested-loops\"><strong>Shell Scripting Tutorial-51:</strong> <em>Nested Loops</em></h2>\r\n\r\n<p>Example for nested loop. <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. display all combination of  number 1 2 3</span>\r\n\r\na=<span class=\"hljs-number\">1</span>\r\n<span class=\"hljs-keyword\">while</span> [ <span class=\"hljs-variable\">$a</span> -le <span class=\"hljs-number\">3</span> ]\r\n<span class=\"hljs-keyword\">do</span>\r\n    b=<span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-keyword\">while</span> [ <span class=\"hljs-variable\">$b</span> -le <span class=\"hljs-number\">3</span> ]\r\n    <span class=\"hljs-keyword\">do</span>\r\n        c=<span class=\"hljs-number\">1</span>\r\n        <span class=\"hljs-keyword\">while</span> [ <span class=\"hljs-variable\">$c</span> -le <span class=\"hljs-number\">3</span> ]\r\n        <span class=\"hljs-keyword\">do</span>\r\n            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$a</span><span class=\"hljs-variable\">$b</span><span class=\"hljs-variable\">$c</span>\"</span>\r\n            c=`expr <span class=\"hljs-variable\">$c</span> + <span class=\"hljs-number\">1</span>`\r\n        <span class=\"hljs-keyword\">done</span>\r\n        b=`expr <span class=\"hljs-variable\">$b</span> + <span class=\"hljs-number\">1</span>`\r\n    <span class=\"hljs-keyword\">done</span>\r\n    a=`expr <span class=\"hljs-variable\">$a</span> + <span class=\"hljs-number\">1</span>`\r\n<span class=\"hljs-keyword\">done</span>\r\n</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs \">111\r\n112\r\n113\r\n121\r\n122\r\n123\r\n131\r\n132\r\n133\r\n211\r\n212\r\n213\r\n221\r\n222\r\n223\r\n231\r\n232\r\n233\r\n311\r\n312\r\n313\r\n321\r\n322\r\n323\r\n331\r\n332\r\n333</code></pre>\r\n\r\n<h2 id=\"shell-scripting-tutorial-52-the-break-statement\"><strong>Shell Scripting Tutorial-52:</strong> <em>The ‘break’ Statement</em></h2>\r\n\r\n<p>break terminates the loop. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. generate 10 number using while loop</span>\r\n\r\ncount=<span class=\"hljs-number\">1</span>\r\n<span class=\"hljs-keyword\">while</span> [ <span class=\"hljs-variable\">$count</span> -le <span class=\"hljs-number\">10</span> ]\r\n<span class=\"hljs-keyword\">do</span>\r\n    <span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$count</span> <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">6</span> ]\r\n    <span class=\"hljs-keyword\">then</span>\r\n        <span class=\"hljs-keyword\">break</span>\r\n    <span class=\"hljs-keyword\">fi</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$count</span>\r\n    count=`expr <span class=\"hljs-variable\">$count</span> + <span class=\"hljs-number\">1</span>`\r\n<span class=\"hljs-keyword\">done</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"We are out of the loop\"</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs vhdl\"><span class=\"hljs-number\">1</span>\r\n<span class=\"hljs-number\">2</span>\r\n<span class=\"hljs-number\">3</span>\r\n<span class=\"hljs-number\">4</span>\r\n<span class=\"hljs-number\">5</span>\r\nWe are <span class=\"hljs-keyword\">out</span> <span class=\"hljs-keyword\">of</span> the <span class=\"hljs-keyword\">loop</span>\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>break</code></td>\r\n  <td>ends the loop iteration</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-53-the-continue-statement\"><strong>Shell Scripting Tutorial-53:</strong> <em>The ‘continue’ Statement</em></h2>\r\n\r\n<p>continue sends execution the beginning of the loop. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. generate 10 number using while loop</span>\r\n\r\ncount=<span class=\"hljs-number\">0</span>\r\n<span class=\"hljs-keyword\">while</span> [ <span class=\"hljs-variable\">$count</span> -le <span class=\"hljs-number\">9</span> ]\r\n<span class=\"hljs-keyword\">do</span>\r\n    count=`expr <span class=\"hljs-variable\">$count</span> + <span class=\"hljs-number\">1</span>`\r\n    <span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$count</span> <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">5</span> ]\r\n    <span class=\"hljs-keyword\">then</span>\r\n        <span class=\"hljs-keyword\">continue</span>\r\n    <span class=\"hljs-keyword\">fi</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$count</span>\r\n<span class=\"hljs-keyword\">done</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"End of the loop\"</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs vbnet\"><span class=\"hljs-number\">1</span>\r\n<span class=\"hljs-number\">2</span>\r\n<span class=\"hljs-number\">3</span>\r\n<span class=\"hljs-number\">4</span>\r\n<span class=\"hljs-number\">6</span>\r\n<span class=\"hljs-number\">7</span>\r\n<span class=\"hljs-number\">8</span>\r\n<span class=\"hljs-number\">9</span>\r\n<span class=\"hljs-number\">10</span>\r\n<span class=\"hljs-keyword\">End</span> <span class=\"hljs-keyword\">of</span> the <span class=\"hljs-keyword\">loop</span></code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>continue</code></td>\r\n  <td>returns back to start of loop</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-54-more-on-metacharacters\"><strong>Shell Scripting Tutorial-54:</strong> <em>More on Metacharacters</em></h2>\r\n\r\n<p>Running more than one command a line. <br>\r\n<code>ls ; cal ; banner \"mustafa celik\"</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash\r\n</span>\r\n<span class=\"hljs-comment\"># run the following command before the script:</span>\r\n<span class=\"hljs-comment\"># create file text_tutorial_54 with some text</span>\r\n\r\nls ; cal ; banner <span class=\"hljs-string\">\"mustafa celik\"</span>\r\n\r\ngrep -i money text_tutorial_54 &gt; pattern &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Task was completed.\"</span>\r\n\r\ncat pattern</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs applescript\">animals              script_2_tutorial_61  video_tutorial_10.sh  video_tutorial_29.sh  video_tutorial_48.sh\r\ncommandlist_tutorial_50      script_3_tutorial_61  video_tutorial_11.sh  video_tutorial_30.sh  video_tutorial_49.sh\r\ncreate_consecutive_files.sh  sports        video_tutorial_12.sh  video_tutorial_31.sh  video_tutorial_50.sh\r\nempty_file1          test1         video_tutorial_13.sh  video_tutorial_32.sh  video_tutorial_51.sh\r\nempty_file2          test2         video_tutorial_14.sh  video_tutorial_33.sh  video_tutorial_52.sh\r\nempty_file3          test_file         video_tutorial_15.sh  video_tutorial_34.sh  video_tutorial_53.sh\r\nfolder1              test_file2        video_tutorial_16.sh  video_tutorial_35.sh  video_tutorial_54.sh\r\nfolder2              text_tutorial_43      video_tutorial_17.sh  video_tutorial_36.sh  video_tutorial_55.sh\r\nfolder3              text_tutorial_47      video_tutorial_18.sh  video_tutorial_37.sh  video_tutorial_56.sh\r\nhelpfile             text_tutorial_49      video_tutorial_19.sh  video_tutorial_38.sh  video_tutorial_57.sh\r\nmerged_test_files        text_tutorial_54      video_tutorial_20.sh  video_tutorial_39.sh  video_tutorial_58.sh\r\n<span class=\"hljs-keyword\">my</span>.joker             video_tutorial_02.sh  video_tutorial_21.sh  video_tutorial_40.sh  video_tutorial_59.sh\r\nnew              video_tutorial_03.sh  video_tutorial_22.sh  video_tutorial_41.sh  video_tutorial_60.sh\r\nnew_name             video_tutorial_04.sh  video_tutorial_23.sh  video_tutorial_42.sh  video_tutorial_61.sh\r\nold              video_tutorial_05.sh  video_tutorial_24.sh  video_tutorial_43.sh  video_tutorial_62.sh\r\nold_soft             video_tutorial_06.sh  video_tutorial_25.sh  video_tutorial_44.sh\r\nplayers              video_tutorial_07.sh  video_tutorial_26.sh  video_tutorial_45.sh\r\nsandbox              video_tutorial_08.sh  video_tutorial_27.sh  video_tutorial_46.sh\r\nscript_1_tutorial_61         video_tutorial_09.sh  video_tutorial_28.sh  video_tutorial_47.sh\r\n    August <span class=\"hljs-number\">2016</span>       \r\nSu Mo Tu We Th Fr Sa  \r\n    <span class=\"hljs-number\">1</span>  <span class=\"hljs-number\">2</span>  <span class=\"hljs-number\">3</span>  <span class=\"hljs-number\">4</span>  <span class=\"hljs-number\">5</span>  <span class=\"hljs-number\">6</span>  \r\n <span class=\"hljs-number\">7</span>  <span class=\"hljs-number\">8</span>  <span class=\"hljs-number\">9</span> <span class=\"hljs-number\">10</span> <span class=\"hljs-number\">11</span> <span class=\"hljs-number\">12</span> <span class=\"hljs-number\">13</span>  \r\n<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">15</span> <span class=\"hljs-number\">16</span> <span class=\"hljs-number\">17</span> <span class=\"hljs-number\">18</span> <span class=\"hljs-number\">19</span> <span class=\"hljs-number\">20</span>  \r\n<span class=\"hljs-number\">21</span> <span class=\"hljs-number\">22</span> <span class=\"hljs-number\">23</span> <span class=\"hljs-number\">24</span> <span class=\"hljs-number\">25</span> <span class=\"hljs-number\">26</span> <span class=\"hljs-number\">27</span>  \r\n<span class=\"hljs-number\">28</span> <span class=\"hljs-number\">29</span> <span class=\"hljs-number\">30</span> <span class=\"hljs-number\">31</span>           \r\n\r\n\r\n <span class=\"hljs-comment\">#    #  #    #   ####    #####    ##    ######    ##             ####   ######</span>\r\n <span class=\"hljs-comment\">##  ##  #    #  #          #     #  #   #        #  #           #    #  #</span>\r\n <span class=\"hljs-comment\"># ## #  #    #   ####      #    #    #  #####   #    #          #       #####</span>\r\n <span class=\"hljs-comment\">#    #  #    #       #     #    ######  #       ######          #       #</span>\r\n <span class=\"hljs-comment\">#    #  #    #  #    #     #    #    #  #       #    #          #    #  #</span>\r\n <span class=\"hljs-comment\">#    #   ####    ####      #    #    #  #       #    #           ####   ######</span>\r\n\r\nTask was completed.\r\nMoney, <span class=\"hljs-keyword\">get</span> away\r\nMoney, <span class=\"hljs-keyword\">it</span>'s a gas\r\nMoney, <span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">back</span>\r\nMoney, <span class=\"hljs-keyword\">it</span>'s a hit \r\nMoney, <span class=\"hljs-keyword\">it</span>'s a crime \r\nMoney, so they <span class=\"hljs-command\">say</span> \r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>ls ; cal ; banner \"hello\"</code></td>\r\n  <td>running more than one command</td>\r\n</tr>\r\n<tr>\r\n  <td><code>grep -i money text_tutorial_54 &gt; pattern &amp;&amp; echo \"Task was completed.\"</code></td>\r\n  <td>&amp;&amp; works if first part is ok</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-55-adding-removing-users\"><strong>Shell Scripting Tutorial-55:</strong> <em>Adding &amp; Removing Users</em></h2>\r\n\r\n<p>by using GUI user can be added and deleted.  </p>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>sudo login</code></td>\r\n  <td>change the user</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-56-know-when-users-log-in-part-one\"><strong>Shell Scripting Tutorial-56:</strong> <em>Know when users log in Part One</em></h2>\r\n\r\n<p>Login example. <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. checks every minute the user login or not</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter username:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> logname\r\n\r\ntime=<span class=\"hljs-number\">0</span>\r\n\r\n<span class=\"hljs-keyword\">while</span> <span class=\"hljs-literal\">true</span>\r\n<span class=\"hljs-keyword\">do</span>\r\n    who | grep <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span>\"</span> &gt; /dev/null\r\n    <span class=\"hljs-keyword\">if</span> [ $? <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">0</span> ]\r\n    <span class=\"hljs-keyword\">then</span>\r\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span> has logged in.\"</span>\r\n        <span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$time</span> <span class=\"hljs-operator\">-ne</span> <span class=\"hljs-number\">0</span> ]\r\n        <span class=\"hljs-keyword\">then</span>\r\n            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span> was <span class=\"hljs-variable\">$time</span> minutes late in logging in.\"</span>\r\n        <span class=\"hljs-keyword\">fi</span>\r\n        <span class=\"hljs-keyword\">exit</span>\r\n    <span class=\"hljs-keyword\">else</span>\r\n        time=`expr <span class=\"hljs-variable\">$time</span> + <span class=\"hljs-number\">1</span>`\r\n        sleep <span class=\"hljs-number\">60</span>\r\n    <span class=\"hljs-keyword\">fi</span>\r\n<span class=\"hljs-keyword\">done</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs oxygene\">Enter username:joker\r\njoker <span class=\"hljs-keyword\">has</span> logged <span class=\"hljs-keyword\">in</span>.\r\n</code></pre>\r\n\r\n<h2 id=\"shell-scripting-tutorial-57-know-when-users-log-in-part-two\"><strong>Shell Scripting Tutorial-57:</strong> <em>Know when users log in Part Two</em></h2>\r\n\r\n<p>example of login. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. checks every minute the user login or not</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter username:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> logname\r\n\r\ngrep <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span>\"</span> /etc/passwd &gt; /dev/null\r\n<span class=\"hljs-keyword\">if</span> [ $? <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">0</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Wait...\"</span>\r\n<span class=\"hljs-keyword\">else</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"User not found.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>  \r\n\r\ntime=<span class=\"hljs-number\">0</span>\r\n\r\n<span class=\"hljs-keyword\">while</span> <span class=\"hljs-literal\">true</span>\r\n<span class=\"hljs-keyword\">do</span>\r\n    who | grep <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span>\"</span> &gt; /dev/null\r\n    <span class=\"hljs-keyword\">if</span> [ $? <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">0</span> ]\r\n    <span class=\"hljs-keyword\">then</span>\r\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span> has logged in.\"</span>\r\n        <span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$time</span> <span class=\"hljs-operator\">-ne</span> <span class=\"hljs-number\">0</span> ]\r\n        <span class=\"hljs-keyword\">then</span>\r\n            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span> was <span class=\"hljs-variable\">$time</span> minutes late in logging in.\"</span>\r\n        <span class=\"hljs-keyword\">fi</span>\r\n        <span class=\"hljs-keyword\">exit</span>\r\n    <span class=\"hljs-keyword\">else</span>\r\n        time=`expr <span class=\"hljs-variable\">$time</span> + <span class=\"hljs-number\">1</span>`\r\n        sleep <span class=\"hljs-number\">60</span>\r\n    <span class=\"hljs-keyword\">fi</span>\r\n<span class=\"hljs-keyword\">done</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs vhdl\">Enter username:joker\r\n<span class=\"hljs-keyword\">Wait</span>...\r\njoker has logged <span class=\"hljs-keyword\">in</span>.\r\n</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>grep \"$logname\" /etc/passwd &gt; /dev/null</code></td>\r\n  <td>checking the user exists or not</td>\r\n</tr>\r\n<tr>\r\n  <td><code>if [ $? -eq 0 ]</code></td>\r\n  <td></td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-58-know-when-users-log-in-final-part\"><strong>Shell Scripting Tutorial-58:</strong> <em>Know when users log in Final Part</em></h2>\r\n\r\n<p>loging example is implemented. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-comment\">#!/usr/bin/env bas</span>\r\n<span class=\"hljs-comment\"># Shell_scripting_tutorial_58:  Know when users log in Final Part</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># 1. checks every minute the user login or not</span>\r\n\r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Enter username:\\c\"</span>\r\n<span class=\"hljs-built_in\">read</span> logname\r\n\r\ngrep <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span>\"</span> /etc/passwd &gt; /dev/null\r\n<span class=\"hljs-keyword\">if</span> [ $? <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">0</span> ]\r\n<span class=\"hljs-keyword\">then</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Wait...\"</span>\r\n<span class=\"hljs-keyword\">else</span>\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"User not found.\"</span>\r\n<span class=\"hljs-keyword\">fi</span>  \r\n\r\ntime=<span class=\"hljs-number\">0</span>\r\n\r\n<span class=\"hljs-keyword\">while</span> <span class=\"hljs-literal\">true</span>\r\n<span class=\"hljs-keyword\">do</span>\r\n    who | grep <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span>\"</span> &gt; /dev/null\r\n    <span class=\"hljs-keyword\">if</span> [ $? <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">0</span> ]\r\n    <span class=\"hljs-keyword\">then</span>\r\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span> has logged in.\"</span>\r\n        <span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$time</span> <span class=\"hljs-operator\">-ne</span> <span class=\"hljs-number\">0</span> ]\r\n        <span class=\"hljs-keyword\">then</span>\r\n            <span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$time</span> <span class=\"hljs-operator\">-gt</span> <span class=\"hljs-number\">60</span> ]\r\n            <span class=\"hljs-keyword\">then</span>\r\n                min=`expr <span class=\"hljs-variable\">$time</span> / <span class=\"hljs-number\">60</span>`\r\n                sec=`expr <span class=\"hljs-variable\">$time</span> % <span class=\"hljs-number\">60</span>`\r\n                <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span> was <span class=\"hljs-variable\">$min</span> minutes and <span class=\"hljs-variable\">$sec</span> seconds late in logging in.\"</span>\r\n            <span class=\"hljs-keyword\">else</span>\r\n                sec=<span class=\"hljs-variable\">$time</span>\r\n                <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$logname</span> was <span class=\"hljs-variable\">$sec</span> seconds late in logging in.\"</span>\r\n            <span class=\"hljs-keyword\">fi</span>\r\n        <span class=\"hljs-keyword\">fi</span>\r\n        <span class=\"hljs-keyword\">exit</span>\r\n    <span class=\"hljs-keyword\">else</span>\r\n        time=`expr <span class=\"hljs-variable\">$time</span> + <span class=\"hljs-number\">1</span>`\r\n        sleep <span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-keyword\">fi</span>\r\n<span class=\"hljs-keyword\">done</span></code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs vhdl\">Enter username:joker\r\n<span class=\"hljs-keyword\">Wait</span>...\r\njoker has logged <span class=\"hljs-keyword\">in</span>.\r\n</code></pre>\r\n\r\n<h2 id=\"shell-scripting-tutorial-59-communicate-with-other-users-using-write\"><strong>Shell Scripting Tutorial-59:</strong> <em>Communicate with other users using ‘write’</em></h2>\r\n\r\n<p>Both users must be logged in different terminals.  </p>\r\n\r\n<p><code>write username</code>  the writer command. <br>\r\n<code>mesg -y</code> the receiver command.  </p>\r\n\r\n<p><code>finger</code> shows the terminal of other users. <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># 1. checks every minute the user login or not</span>\r\n<span class=\"hljs-comment\"># </span>\r\n<span class=\"hljs-comment\"># run the following command before the script:</span>\r\n<span class=\"hljs-comment\"># both users must be logged in different terminal.</span>\r\n\r\nwrite newuser2\r\n\r\n<span class=\"hljs-comment\"># on the other terminal following command shoul be ran.</span>\r\nmesg y\r\n\r\n<span class=\"hljs-comment\"># shows the terminal list of users to communicate.</span>\r\nfinger</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>write username</code></td>\r\n  <td>message command</td>\r\n</tr>\r\n<tr>\r\n  <td><code>mesg -y</code></td>\r\n  <td>receiver command to take messages</td>\r\n</tr>\r\n<tr>\r\n  <td><code>finger</code></td>\r\n  <td>terminal list for messaging</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-60-create-your-own-commands-using-functions\"><strong>Shell Scripting Tutorial-60:</strong> <em>Create Your Own Commands Using Functions</em></h2>\r\n\r\n<p>following is the function usage. <br>\r\nrun the following command to initialize the function:  </p>\r\n\r\n<p>use following command to release the function: <br>\r\n<code>$ unset youtube</code> <br>\r\n<strong>Example:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash</span>\r\n<span class=\"hljs-comment\"># run the following command before the script:</span>\r\n<span class=\"hljs-comment\"># write functions</span>\r\n<span class=\"hljs-comment\"># change the permissions</span>\r\n<span class=\"hljs-comment\"># run the script</span>\r\n<span class=\"hljs-comment\"># $. video_tutorial_60.sh</span>\r\n<span class=\"hljs-comment\"># $ youtube</span>\r\n<span class=\"hljs-comment\"># $ byebye</span>\r\n<span class=\"hljs-comment\"># use unset to delete function</span>\r\n<span class=\"hljs-comment\"># $ unset youtube</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">youtube</span></span>()\r\n{\r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Good Morning.\"</span>\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">byebye</span></span>()\r\n{\r\n    cal\r\n}</code></pre>\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n  <th>Command</th>\r\n  <th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody><tr>\r\n  <td><code>unset youtube</code></td>\r\n  <td>removes the function</td>\r\n</tr>\r\n</tbody></table>\r\n\r\n\r\n<h2 id=\"shell-scripting-tutorial-61-executing-multiple-scripts\"><strong>Shell Scripting Tutorial-61:</strong> <em>Executing Multiple Scripts</em></h2>\r\n\r\n<p>Script should run at the last line of the previous script.  <br>\r\n<strong>Example:</strong></p>\r\n\r\n\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs bash\"><span class=\"hljs-shebang\">#!/usr/bin/env bash </span>\r\n<span class=\"hljs-comment\"># run the following command before the script:</span>\r\n<span class=\"hljs-comment\"># prepare 3 scripts which calls another consequently.</span>\r\n\r\nsh script_1_tutorial_61</code></pre>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<pre class=\"prettyprint\"><code class=\" hljs ruleslanguage\">                                                           #\r\n  ###<span class=\"hljs-array\">#    </span>###<span class=\"hljs-array\">#   </span>####<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span>####<span class=\"hljs-array\">#    </span>####<span class=\"hljs-array\">#           </span>##\r\n <span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#            </span><span class=\"hljs-array\"># </span>#\r\n  ###<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#              </span>#\r\n      <span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#       </span>####<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span>####<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#              </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#              </span>#\r\n  ###<span class=\"hljs-array\">#    </span>###<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#            </span>#####\r\n\r\n                                                         #####\r\n  ###<span class=\"hljs-array\">#    </span>###<span class=\"hljs-array\">#   </span>####<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span>####<span class=\"hljs-array\">#    </span>####<span class=\"hljs-array\">#         </span><span class=\"hljs-array\">#     </span>#\r\n <span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#                 </span>#\r\n  ###<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#            </span>#####\r\n      <span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#       </span>####<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span>####<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#           </span>#\r\n <span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#           </span>#\r\n  ###<span class=\"hljs-array\">#    </span>###<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#           </span>#######\r\n\r\n ####<span class=\"hljs-array\">#                                                   </span>#####\r\n<span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#   </span>###<span class=\"hljs-array\">#   </span>####<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span>####<span class=\"hljs-array\">#    </span>####<span class=\"hljs-array\">#         </span><span class=\"hljs-array\">#     </span>#\r\n<span class=\"hljs-array\">#        </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#                 </span>#\r\n ####<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#       </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#            </span>#####\r\n      <span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#       </span>####<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span>####<span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#                 </span>#\r\n<span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#  </span><span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#      </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#           </span><span class=\"hljs-array\">#     </span>#\r\n ####<span class=\"hljs-array\">#    </span>###<span class=\"hljs-array\">#   </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#     </span><span class=\"hljs-array\">#    </span><span class=\"hljs-array\">#          </span><span class=\"hljs-array\">#            </span>#####\r\n\r\n</code></pre>\r\n\r\n<blockquote>\r\n  <p>Written with <a href=\"https://stackedit.io/\">StackEdit</a>.</p>\r\n</blockquote>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}